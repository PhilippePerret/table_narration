
# Définition des styles de paragraphe (Fiche::Paragraph)
# 
#   * Permet de construire :
#     - le fichier ./css/livre/styles_paragraph.css
#       qui définit les classes CSS
#     - le fichier ./js/data/styles_paragraph.js
#       qui contient la liste des styles (pour peupler le menu au verso de la fiche)
#
#   * C'est le fichier ./ruby/module/update_styles_paragraph.rb qui produit
#     ces fichiers de façon automatique dès que ce fichier a été modifié.
# 
# Pour composer un style : mêmes règle pour un fichier CSS, mais sans utiliser aucune
# ponctuation (par de ";", pas de ":", pas d'accolades).
# 
# Un élément placé contre le bord gauche est forcément un nom de style, une ligne
# "tabulée" définit forcément une propriété (ou une donnée pour le style).
#
#   NOTES
#   -----
#     ::  Tous les selectors qui commencent par le même nom fonctionnent 
#         en "exclusion", c'est-à-dire qu'un seul peut être appliqué à la fois.
#     ::  Toutes les propriétés concernant les données du style hors CSS sont
#         précédées de ":". Par exemple `:style_after' qui définit le style par
#         défaut du paragraphe suivant.
#         Ces données sont mises dans `DATA_STYLES' dans le même fichier.
# 
#   NOTE SUR LES PARAGRAPHES DEVANT SUBIR UN TRAITEMENT POUR LA PUBLICATION
#   -----------------------------------------------------------------------
#   ::  Si un style de paragraphe doit subir un traitement particulier (par
#       exemple, les paragraphes de styles `scenario_scene` et 
#       `scenario_character` sont mis en capitales), ce traitement doit être
#       défini dans le module `./ruby/lib_publication/parser_style.rb` en
#       définissant une méthode de même nom que le style.
# 
#   NOTES CONCERNANT LES STYLES "DOCUMENT AUTEUR" (par exemple un scénario)
#   -----------------------------------------------------------------------
#   ::  Ces styles sont traités de façon particulière à la publication : tous les
#       paragraphes adjacents sont rassemblés pour être placés dans un environnement
#       défini dans `publication/source/asset.tex`.
#   ::  Pour créer un tel document, il faut :
#       * Définir son préfixe dans `ruby/lib_publication/fiche.rb` dans la 
#         constante PREFIXES_STYLE_DOC_AUTEUR. Par exemple 'scenario' est mis dans
#         cette constante.
#       * Tous les styles de ce type de document doivent commencer par ce préfixe
#         suivi d'un trait plat. Par exemple 'scenario_action', 'scenario_character'.
#       * Dans `publication/source/asset.tex` il faut définir la commande de nom
#         'doc'+<prefixe capitalisé. Par exemple, pour 'scenario' => '\docScenario'
#       * Si ce type de document contient des sous-styles (intitulé, action, etc.)
#         il faut définir une commande LaTex pour chacun d'eux.
#         Si le nom du style est ici '<prefixe>_<sousstyle>' le nom de la commande
#         LaTex doit être '<prefixe><Sousstyle>' (suppression du trait plat et 
#         capitalisation de 'sousstyle') Par exemple pour le sous-style 'note_jeu'
#         du scénario, le style est défini ici par 'scenario_note_jeu' et la commande
#         LaTex dans 'publication/source/asset.tex' porte le nom 'scenarioNoteJeu'.
#       * S'inspirer des styles scénario pour composer le nouveau style.
# 
# ----------------------------------------------------------------------------------

titre_level_1, titre_level_2, titre_level_3
  font-family   "Times New Roman"
  margin-left   -12px

titre_level_1
  font-size       1.6em
  margin-top      40px
  margin-bottom   30px
  :style_after    titre_level_2

titre_level_2
  font-size       1.4em
  margin-top      30px
  margin-bottom   20px
  :style_after    titre_level_3
  
titre_level_3
  font-size       1.2em
  margin-top      20px
  margin-bottom   10px
  :style_after    null

# ---------------------------------------------------------------------
#   Styles pour scénario
# 
scenario_scene, scenario_action, scenario_character, scenario_note_jeu, scenario_dialog
  font-family     Arial, Helvetica
  font-size       12pt

scenario_scene, scenario_action, scenario_character
  margin-top      16px

scenario_scene
  margin-left     0px
  :style_after    scenario_action
  
scenario_scene, scenario_character
  font-weight     bold
  font-variant    small-caps
  font-size       1.1em

scenario_action
  margin-left     20px
  :style_after    scenario_action

scenario_character
  margin-left     170px
  :style_after    scenario_dialog

scenario_note_jeu
  font-style      italic
  margin-left     170px
  :style_after    scenario_dialog

scenario_dialog
  margin-left     104px
  width           300px
  :style_after    scenario_action

# ---------------------------------------------------------------------
#   Divers

action_lecteur
  font-family     Verdana
  font-size       0.8em
  margin-left     4em
  font-weight     bolder
  :style_after    null
  
note, note_redaction
  font-style      italic
  font-size       0.8em
  
note
  :style_after    null
  
note_redaction
  color           blue
  :style_after    null
