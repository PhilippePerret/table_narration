{
    "project": {},
    "files": {
        "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Dom.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Dom.js",
            "modules": {
                "Dom": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {
                "Dom": 1
            }
        },
        "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js",
            "modules": {
                "Edition": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {
                "Edition": 1
            }
        },
        "/Users/philippeperret/Sites/table_narration/js/Film/>film_class.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/Film/>film_class.js",
            "modules": {
                "FilmClass": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/Film/FILMS.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/Film/FILMS.js",
            "modules": {
                "FILMS": 1
            },
            "classes": {
                "FILMS": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "modules": {
                "Search.js": 1
            },
            "classes": {
                "Search": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/edition/Collection.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/edition/Collection.js",
            "modules": {
                "edition.collection.js": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/extension/String.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/extension/String.js",
            "modules": {
                "String": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/livre/Book_class.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/livre/Book_class.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/livre/Chapter_class.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/livre/Chapter_class.js",
            "modules": {
                "Chapter": 1
            },
            "classes": {
                "Chapter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "modules": {
                "FICHES": 1
            },
            "classes": {
                "FICHES": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/livre/PARAGRAPHS.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/livre/PARAGRAPHS.js",
            "modules": {
                "PARAGRAPHS": 1
            },
            "classes": {
                "PARAGRAPHES": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/livre/Page_class.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/livre/Page_class.js",
            "modules": {
                "Page": 1
            },
            "classes": {
                "Page": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "modules": {
                "Paragraph": 1
            },
            "classes": {
                "Paragraph": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/object/sous_objets/Mot_class.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/object/sous_objets/Mot_class.js",
            "modules": {},
            "classes": {
                "Mot": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/object/>OBJETS_Dom.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/object/>OBJETS_Dom.js",
            "modules": {},
            "classes": {},
            "fors": {
                "OBJETS.Dom": 1
            },
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/object/>OBJETS_Edition.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/object/>OBJETS_Edition.js",
            "modules": {
                "OBJET": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/object/OBJETS.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/object/OBJETS.js",
            "modules": {
                "objets": 1
            },
            "classes": {
                "OBJETS": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/object/Objet_class.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/object/Objet_class.js",
            "modules": {
                "ObjetClass": 1
            },
            "classes": {
                "ObjetClass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "modules": {
                "dom": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/Fiche_Verso.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_Verso.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "modules": {
                "Fiche": 1
            },
            "classes": {
                "Fiche": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "modules": {
                "data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/required/Fiche_states.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_states.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/scenodico/>DICO_Edition.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/scenodico/>DICO_Edition.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Edition": 1
            }
        },
        "/Users/philippeperret/Sites/table_narration/js/scenodico/>Mot_class.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/scenodico/>Mot_class.js",
            "modules": {
                "Mot": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/scenodico/DICO.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/scenodico/DICO.js",
            "modules": {
                "DICO.js": 1
            },
            "classes": {
                "DICO": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/ui/>ui_html.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_html.js",
            "modules": {
                "Html": 1
            },
            "classes": {
                "UI.Html": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "modules": {
                "Input": 1
            },
            "classes": {
                "UI.Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/ui/contextual_help.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/ui/contextual_help.js",
            "modules": {
                "ContextualHelp": 1
            },
            "classes": {
                "ContextualHelp": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/ui/ui.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "modules": {
                "UI": 1
            },
            "classes": {
                "UI": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/App.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "modules": {
                "app": 1
            },
            "classes": {
                "App": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "modules": {
                "app-prefs": 1
            },
            "classes": {},
            "fors": {
                "App.Prefs": 1
            },
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/Collection.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "modules": {
                "Collection": 1
            },
            "classes": {
                "Collection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/Data.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/Data.js",
            "modules": {
                "Data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/REFS.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/REFS.js",
            "modules": {
                "REFS.js": 1
            },
            "classes": {
                "REFS": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/Ref.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "modules": {
                "ref.js": 1
            },
            "classes": {
                "Ref": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/col_text.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/col_text.js",
            "modules": {
                "ColText": 1
            },
            "classes": {
                "ColText": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/debug.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/debug.js",
            "modules": {
                "Debug": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/handy_methods.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "modules": {
                "window": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/jquery_extensions.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/jquery_extensions.js",
            "modules": {
                "jQueryExtension": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/key_events.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/key_events.js",
            "modules": {
                "KeyEvents": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/keyboard_events.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/keyboard_events.js",
            "modules": {
                "KeyboardEvents": 1
            },
            "classes": {
                "window": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/Users/philippeperret/Sites/table_narration/js/ready.js": {
            "name": "/Users/philippeperret/Sites/table_narration/js/ready.js",
            "modules": {
                "ready.js": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "FILMS": {
            "name": "FILMS",
            "submodules": {},
            "classes": {
                "FILMS": 1
            },
            "fors": {},
            "namespaces": {
                "Dom": 1,
                "Edition": 1
            },
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/FILMS.js",
            "line": 5
        },
        "Dom": {
            "name": "Dom",
            "submodules": {},
            "classes": {
                "OBJETS.Dom": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "Dom": 1
            },
            "module": "OBJETS.Dom",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Dom.js",
            "line": 1,
            "tag": "main",
            "itemtype": "main"
        },
        "Edition": {
            "name": "Edition",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "Edition": 1
            },
            "module": "fiche_data",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js",
            "line": 1,
            "tag": "main",
            "itemtype": "main"
        },
        "FilmClass": {
            "name": "FilmClass",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>film_class.js",
            "line": 1
        },
        "Search.js": {
            "name": "Search.js",
            "submodules": {},
            "classes": {
                "Search": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 1,
            "description": "Module pour l'objet Search qui permet de faire des recherches dans \ntous les textes de la collection.",
            "static": 1
        },
        "edition.collection.js": {
            "name": "edition.collection.js",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/edition/Collection.js",
            "line": 1,
            "itemtype": "main"
        },
        "String": {
            "name": "String",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/extension/String.js",
            "line": 1,
            "description": "Extensions de la classe String propre à l'application."
        },
        "Chapter": {
            "name": "Chapter",
            "submodules": {},
            "classes": {
                "Chapter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Chapter_class.js",
            "line": 4
        },
        "FICHES": {
            "name": "FICHES",
            "submodules": {},
            "classes": {
                "FICHES": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 11
        },
        "PARAGRAPHS": {
            "name": "PARAGRAPHS",
            "submodules": {},
            "classes": {
                "PARAGRAPHES": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/PARAGRAPHS.js",
            "line": 4
        },
        "Page": {
            "name": "Page",
            "submodules": {},
            "classes": {
                "Page": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Page_class.js",
            "line": 4
        },
        "Paragraph": {
            "name": "Paragraph",
            "submodules": {},
            "classes": {
                "Paragraph": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 4
        },
        "Mot": {
            "name": "Mot",
            "submodules": {
                "dom": 1
            },
            "classes": {
                "Mot": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/sous_objets/Mot_class.js",
            "line": 7,
            "itemtype": "main"
        },
        "OBJETS.Dom": {
            "name": "OBJETS.Dom",
            "submodules": {
                "Dom": 1
            },
            "classes": {
                "OBJETS.Dom": 1
            },
            "fors": {
                "OBJETS.Dom": 1
            },
            "namespaces": {}
        },
        "OBJET": {
            "name": "OBJET",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/>OBJETS_Edition.js",
            "line": 1,
            "tag": "main",
            "itemtype": "main"
        },
        "objets": {
            "name": "objets",
            "submodules": {},
            "classes": {
                "OBJETS": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/OBJETS.js",
            "line": 13,
            "description": "Objet OBJETS mixé dans les FILMS, DICO et REFS\n\nNOTES\n-----\n  * Les descriptions ci-dessous, lorsqu'elles ne parlent que de \"Film\"\n    peuvent être comprise pour tout objet pluriel mixant ces méthodes."
        },
        "ObjetClass": {
            "name": "ObjetClass",
            "submodules": {},
            "classes": {
                "ObjetClass": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/Objet_class.js",
            "line": 5
        },
        "fiche_dom": {
            "name": "fiche_dom",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "dom": {
            "name": "dom",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Mot",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 1,
            "tag": "main",
            "itemtype": "main"
        },
        "Fiche": {
            "name": "Fiche",
            "submodules": {},
            "classes": {
                "Fiche": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 5
        },
        "fiche_data": {
            "name": "fiche_data",
            "submodules": {
                "Edition": 1,
                "data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "data": {
            "name": "data",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "fiche_data",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 1,
            "tag": "main",
            "itemtype": "main"
        },
        "DICO": {
            "name": "DICO",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Edition": 1
            }
        },
        "DICO.js": {
            "name": "DICO.js",
            "submodules": {},
            "classes": {
                "DICO": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/scenodico/DICO.js",
            "line": 5
        },
        "UI_HTML": {
            "name": "UI_HTML",
            "submodules": {
                "Html": 1
            },
            "classes": {
                "UI.Html": 1
            },
            "fors": {},
            "namespaces": {},
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_html.js",
            "line": 7
        },
        "Html": {
            "name": "Html",
            "submodules": {},
            "classes": {
                "UI.Html": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "UI_HTML",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_html.js",
            "line": 7,
            "description": "Sous-Objet UI.Html\n\nConstruction des éléments HTML."
        },
        "UI_Input": {
            "name": "UI_Input",
            "submodules": {
                "Input": 1
            },
            "classes": {
                "UI.Input": 1
            },
            "fors": {},
            "namespaces": {},
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 7
        },
        "Input": {
            "name": "Input",
            "submodules": {},
            "classes": {
                "UI.Input": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "UI_Input",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 7,
            "description": "Sous-Objet UI.Input\n\nGestionnaire de champ de saisie.\nMalgré son nom, gère aussi bien les input de type \"text\" que les textarea."
        },
        "ContextualHelp": {
            "name": "ContextualHelp",
            "submodules": {},
            "classes": {
                "ContextualHelp": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/contextual_help.js",
            "line": 5
        },
        "UI": {
            "name": "UI",
            "submodules": {},
            "classes": {
                "UI": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 5
        },
        "app": {
            "name": "app",
            "submodules": {
                "app-prefs": 1
            },
            "classes": {
                "App": 1,
                "App.Prefs": 1
            },
            "fors": {
                "App.Prefs": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 37
        },
        "app-prefs": {
            "name": "app-prefs",
            "submodules": {},
            "classes": {
                "App.Prefs": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "app",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 1,
            "description": "Gestion des préférences de l'application.",
            "tag": "main",
            "itemtype": "main"
        },
        "Collection": {
            "name": "Collection",
            "submodules": {},
            "classes": {
                "Collection": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 5
        },
        "Data": {
            "name": "Data",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/Data.js",
            "line": 1
        },
        "REFS.js": {
            "name": "REFS.js",
            "submodules": {},
            "classes": {
                "REFS": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/REFS.js",
            "line": 5
        },
        "ref.js": {
            "name": "ref.js",
            "submodules": {},
            "classes": {
                "Ref": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 6
        },
        "ColText": {
            "name": "ColText",
            "submodules": {},
            "classes": {
                "ColText": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/col_text.js",
            "line": 5
        },
        "Debug": {
            "name": "Debug",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/debug.js",
            "line": 1
        },
        "window": {
            "name": "window",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "line": 1
        },
        "jQueryExtension": {
            "name": "jQueryExtension",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/jquery_extensions.js",
            "line": 1
        },
        "KeyEvents": {
            "name": "KeyEvents",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/key_events.js",
            "line": 1
        },
        "KeyboardEvents": {
            "name": "KeyboardEvents",
            "submodules": {},
            "classes": {
                "window": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/keyboard_events.js",
            "line": 1
        },
        "ready.js": {
            "name": "ready.js",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/Users/philippeperret/Sites/table_narration/js/ready.js",
            "line": 1
        }
    },
    "classes": {
        "FILMS": {
            "name": "FILMS",
            "shortname": "FILMS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FILMS",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/FILMS.js",
            "line": 5,
            "description": "Object FILMS\n------------\nGestion des films pour l'application.\n\nNOTES\n-----\n  ::  L'application charge le fichier '../interdata/film/data_js/films_data.js'\n      qui définit FILMS.DATA, les données raccourcis des films.",
            "static": 1,
            "extends": "OBJETS"
        },
        "Search": {
            "name": "Search",
            "shortname": "Search",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Search.js",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 1,
            "description": "Module pour l'objet Search qui permet de faire des recherches dans \ntous les textes de la collection."
        },
        "Collection": {
            "name": "Collection",
            "shortname": "Collection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Collection",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 5,
            "mainName": "Collection",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "description": "Objet Collection\n----------------\nGestion de la collection dans son ensemble\n\nHiérarchie\n----------\n  Collection\n    Livres {Book < Fiche}\n      Chapters {Chapter < Fiche}\n        Pages {Page < Fiche}\n          Paragraphs {Paragraph < Fiche}",
            "static": 1
        },
        "Chapter": {
            "name": "Chapter",
            "shortname": "Chapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Chapter",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Chapter_class.js",
            "line": 4,
            "description": "Class pour les chapitres",
            "extends": "Fiche"
        },
        "FICHES": {
            "name": "FICHES",
            "shortname": "FICHES",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FICHES",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 11,
            "description": "Objet FICHES\n------------\nPour la gestion des fiches comme ensemble.",
            "static": 1
        },
        "PARAGRAPHES": {
            "name": "PARAGRAPHES",
            "shortname": "PARAGRAPHES",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PARAGRAPHS",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/PARAGRAPHS.js",
            "line": 4,
            "description": "Pour la gestion des paragraphes ({Fiche} de type {Paragraph}) comme un ensemble",
            "static": 1
        },
        "Page": {
            "name": "Page",
            "shortname": "Page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Page",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Page_class.js",
            "line": 4,
            "description": "Pour la gestion d'une fiche de type Page"
        },
        "Paragraph": {
            "name": "Paragraph",
            "shortname": "Paragraph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Paragraph",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 4,
            "description": "Class d'une fiche de type Paragraph",
            "extends": "Fiche"
        },
        "Mot": {
            "name": "Mot",
            "shortname": "Mot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mot",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/sous_objets/Mot_class.js",
            "line": 7,
            "description": "Class Mot\n----------\nPour la gestion d'un mot du scénodico\n\nNOTES\n-----\n  *  C'est juste la première définition, car l'objet DICO en aura\n      besoin à sa création",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "Identifiant du mot.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Une instance de la class Mot.",
                "type": "Mot"
            }
        },
        "OBJETS.Dom": {
            "name": "OBJETS.Dom",
            "shortname": "OBJETS.Dom",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OBJETS.Dom",
            "submodule": "Dom",
            "namespace": ""
        },
        "OBJETS": {
            "name": "OBJETS",
            "shortname": "OBJETS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "DICO",
                "FILMS"
            ],
            "module": "objets",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/OBJETS.js",
            "line": 13,
            "description": "Objet OBJETS",
            "static": 1
        },
        "ObjetClass": {
            "name": "ObjetClass",
            "shortname": "ObjetClass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ObjetClass",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/Objet_class.js",
            "line": 5,
            "description": "Class qui sera héritée par les « Items » de l'application, qui peuvent être\ndes {Film}s, des {Mot}s, etc.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "Identifiant de l'item.",
                    "type": "String"
                }
            ]
        },
        "Fiche": {
            "name": "Fiche",
            "shortname": "Fiche",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Fiche",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 5,
            "description": "Class Fiche\n-----------\n\nToutes les instances Book, Page, Chapter et Paragraph héritent d'elle\n\n\nRAPPELS\n-------\n  * C'est en ajoutant un enfant à une fiche qu'on détermine les propriétés\n    `parent' et `enfants' des deux fiches concernant.\n    cf. la méthode \"add_enfant\"."
        },
        "DICO": {
            "name": "DICO",
            "shortname": "DICO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DICO.js",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/scenodico/DICO.js",
            "line": 5,
            "description": "Object DICO\n------------\nGestion des mots du scénodico pour l'application.\n\nNOTES\n-----\n  ::  L'application charge le fichier '../interdata/scenodico/data_js/dico_data.js'\n      qui définit DICO.DATA, les données raccourcis des mots.",
            "static": 1,
            "extends": "OBJET"
        },
        "UI.Html": {
            "name": "UI.Html",
            "shortname": "UI.Html",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI_HTML",
            "submodule": "Html",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_html.js",
            "line": 7,
            "description": "Sous-Objet UI.Html\n\nConstruction des éléments HTML.",
            "static": 1
        },
        "UI.Input": {
            "name": "UI.Input",
            "shortname": "UI.Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI_Input",
            "submodule": "Input",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 7,
            "description": "Sous-Objet UI.Input\n\nGestionnaire de champ de saisie.\nMalgré son nom, gère aussi bien les input de type \"text\" que les textarea.",
            "static": 1
        },
        "ContextualHelp": {
            "name": "ContextualHelp",
            "shortname": "ContextualHelp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ContextualHelp",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/contextual_help.js",
            "line": 5,
            "description": "Objet ContextualHelp\n--------------------\nGestion de l'aide contextuelle\n\nRaccourci : CH",
            "static": 1
        },
        "UI": {
            "name": "UI",
            "shortname": "UI",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 5,
            "description": "Gestion de l'interface utilisateur",
            "static": 1
        },
        "App": {
            "name": "App",
            "shortname": "App",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "app",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 37,
            "description": "Pour la gestion de l'application",
            "static": 1
        },
        "App.Prefs": {
            "name": "App.Prefs",
            "shortname": "App.Prefs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "app",
            "submodule": "app-prefs",
            "namespace": ""
        },
        "REFS": {
            "name": "REFS",
            "shortname": "REFS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "REFS.js",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/REFS.js",
            "line": 5,
            "static": 1
        },
        "Ref": {
            "name": "Ref",
            "shortname": "Ref",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ref.js",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 6,
            "description": "Class pour une référence. Une référence est une instance qui permet de gérer\nà la volée les références à d'autres fiches qui sont faites dans des textes\n(ou plus rarement des titres). Une référence possède une fiche-cible ({Fiche})\nqui correspond à l'instance {Fiche} visée par la référence (comprendre : \n“l'instance {Ref} fait référence à la cible {Fiche}).\n\nL'instance {Ref} peut posséder également une “porteuse”, qui est la fiche dans\nlaquelle cette référence est insérée. Elle est définie principalement lorsque\nle texte de la porteuse doit être formaté pour affichage \"humain\".\n\nL'instance {Ref} est capable de gérer toutes les situations, celle où la cible\nn'est pas encore une fiche chargée, où la fichier porteuse de la référence\nn'appartient pas au même livre que la fiche-cible de référence, etc.\n\nNotes\n-----\n  * Bien que l'instance {Ref} ne soit pas une {Fiche}, ses propriétés `id` et\n    `type` sont les mêmes que sa fiche-cible. Mais pour la clarté, l'instance {Ref}\n    possède les propriétés `cible_id` et `cible_type` qui sont des alias.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "rid",
                    "description": "Identifiant de la référence correspondant à `<type>-<id>`\n                      de la cible.",
                    "type": "String"
                }
            ]
        },
        "ColText": {
            "name": "ColText",
            "shortname": "ColText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ColText",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/col_text.js",
            "line": 5,
            "description": "Objet ColText\n-------------\nGestion des textes de la collection (toutes les fiches).\nC'est cet objet par exemple qui va traiter les balises que contient un texte\navant de l'afficher.",
            "static": 1
        },
        "window": {
            "name": "window",
            "shortname": "window",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "KeyboardEvents",
            "namespace": "",
            "file": "/Users/philippeperret/Sites/table_narration/js/keyboard_events.js",
            "line": 1,
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js",
            "line": 32,
            "description": "Liste des propriétés du film qui pourront être\néditées et qui seront enregistrées.\n\nNOTES\n-----\n  * Le champ les recevant porte toujours l'id `filmEdit-<property>'",
            "itemtype": "property",
            "name": "ITEM_PROPERTIES",
            "type": "Array",
            "static": 1,
            "final": 1,
            "class": "FILMS",
            "module": "FILMS",
            "submodule": "Edition",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js",
            "line": 52,
            "description": "Met les valeurs du film +film+ {Film} dans les champs d'édition",
            "itemtype": "method",
            "name": "set_values",
            "params": [
                {
                    "name": "film",
                    "description": "Instance du film à éditer.",
                    "type": "Film"
                }
            ],
            "class": "FILMS",
            "module": "FILMS",
            "submodule": "Edition",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js",
            "line": 122,
            "description": "Récupère les valeurs éditées (en vue de l'enregistrement du Film)",
            "itemtype": "method",
            "name": "get_values",
            "class": "FILMS",
            "module": "FILMS",
            "submodule": "Edition",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js",
            "line": 163,
            "description": "Retourne le type de tag (input|textarea) pour la propriété +prop+",
            "itemtype": "method",
            "name": "tag_for",
            "params": [
                {
                    "name": "prop",
                    "description": "La propriété de l'instance dont il faut obtenir le type du tag",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Le tagname propre à la propriété.",
                "type": "String"
            },
            "class": "FILMS",
            "module": "FILMS",
            "submodule": "Edition",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js",
            "line": 230,
            "description": "Recherche le film sur imdb",
            "itemtype": "method",
            "name": "search_in_imdb\n\nNOTES\n-----\n  * Mis en vraie méthode car appelé depuis le formulaire sans argument\n    en proxy.",
            "params": [
                {
                    "name": "titre",
                    "description": "Le titre du film qu'il faut chercher sur IMDb",
                    "type": "String"
                }
            ],
            "class": "FILMS",
            "module": "FILMS",
            "submodule": "Edition",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js",
            "line": 260,
            "description": "Initialisation du formulaire",
            "itemtype": "method",
            "name": "init_form",
            "class": "FILMS",
            "module": "FILMS",
            "submodule": "Edition",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Film/>FILMS_Edition.js",
            "line": 272,
            "description": "Code HTML du formulaire de film",
            "itemtype": "method",
            "name": "html_formulaire",
            "return": {
                "description": "Code HTML du formulaire pour un {Film}",
                "type": "HTML"
            },
            "class": "FILMS",
            "module": "FILMS",
            "submodule": "Edition",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 13,
            "description": "le panneau est construit",
            "itemtype": "property",
            "name": "prepared",
            "type": "Boolean",
            "default": "false",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 19,
            "description": "a été construit.",
            "itemtype": "property",
            "name": "form_prepared",
            "type": "Boolean",
            "default": "false",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 25,
            "description": "Si true, le panneau de résultat est prêt et peut être peuplé.",
            "itemtype": "property",
            "name": "panneau_result_prepared",
            "type": "Boolean",
            "default": "false",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 32,
            "itemtype": "method",
            "name": "hide",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 39,
            "description": "Bascule entre le panneau de résultat et le formulaire de recherche",
            "itemtype": "method",
            "name": "toggle",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 48,
            "itemtype": "method",
            "name": "show_form",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 57,
            "itemtype": "method",
            "name": "hide_form",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 65,
            "itemtype": "method",
            "name": "show_result",
            "params": [
                {
                    "name": "clean",
                    "description": "Si True, la liste de résultat est effacée",
                    "type": "Boolean"
                }
            ],
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 75,
            "itemtype": "method",
            "name": "hide_result",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 82,
            "description": "= Main = Fonction principale pour invoquer une recherche\n\nNotes\n-----\n  * Cette méthode peut être utilisée par le raccourci `find(...)` défini\n    en bas de ce module.\n  * C'est cette méthode qui est appelée par le bouton “Rechercher” dans le\n    formulaire de recherche.",
            "itemtype": "method",
            "name": "find",
            "async": 1,
            "params": [
                {
                    "name": "text",
                    "description": "Le texte à chercher exprimé en raw text ou\n                        comme une expression régulière",
                    "type": "String|Regexp"
                },
                {
                    "name": "params",
                    "description": "Les paramètres optionnels de la recherche",
                    "type": "Object"
                }
            ],
            "example": [
                "\n  Search.text(\"Ce texte à chercher\")\n  Search.text(/(un|des) textes?/)"
            ],
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 110,
            "description": "Méthode appelée par le bouton \"Rechercher\" du formulaire.\nElle rassemble les paramètres de la recherche et invoque la méthode `find`\npour effectuer cette recherche",
            "itemtype": "method",
            "name": "proceed",
            "async": 1,
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 123,
            "description": "Retour ajax de la requête de recherche (find)",
            "itemtype": "method",
            "name": "found",
            "params": [
                {
                    "name": "rajax",
                    "description": "Objet retourné par la requête Ajax",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ok",
                            "description": "True si la requête s'est bien passée",
                            "type": "Boolean"
                        },
                        {
                            "name": "message",
                            "description": "Le message de retour ou l'erreur",
                            "type": "String"
                        },
                        {
                            "name": "found",
                            "description": "Objet contenant le résultat de la recherche",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 137,
            "description": "Traitement du résultat de la recherche remontée par ajax\nC'est la méthode principale qui affiche le résultat, c'est-à-dire les textes et\nles fiches retenues.",
            "itemtype": "method",
            "name": "display_found",
            "params": [
                {
                    "name": "data",
                    "description": "Donnée du résultat de la recherche",
                    "type": "Object"
                }
            ],
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 160,
            "description": "Ecrit une ligne (div) dans le panneau de résultat",
            "itemtype": "method",
            "name": "write",
            "params": [
                {
                    "name": "line",
                    "description": "La ligne à écrire (dans un DIV)",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options pour l'affichage de ce résultat",
                    "type": "Object",
                    "props": [
                        {
                            "name": "class",
                            "description": "Class CSS pour cette ligne de résultat",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 172,
            "description": "Compose la ligne de résultat à écrire",
            "itemtype": "method",
            "name": "compose_line_result",
            "params": [
                {
                    "name": "line",
                    "description": "La ligne à écrire",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options d'affichage (cf. write ci-dessus)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "La ligne de résultat à écrire",
                "type": "String"
            },
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 193,
            "description": "fiche. Elle décoche ou elle coche tous les types en fonction du checked\nde la case à cocher.",
            "itemtype": "method",
            "name": "onchange_tout_type_fiche",
            "params": [
                {
                    "name": "coched",
                    "description": "True si la case est cochée",
                    "type": "Boolean"
                }
            ],
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 209,
            "description": "Le panneau principal",
            "itemtype": "property",
            "name": "panneau",
            "type": "{jQuerySet}",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 220,
            "description": "Le formulaire de recherche\nNotes\n  * C'est une propriété complexe qui crée le formulaire lorsque\n    c'est nécessaire",
            "itemtype": "property",
            "name": "form",
            "type": "{jQuerySet}",
            "default": "undefined",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 254,
            "description": "Prépare le panneau principal contenant le formulaire et le résultat\nde la recherche",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 270,
            "description": "Prépare le formulaire de recherche et l'insert dans la page\nNotes\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "prepare_form",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 283,
            "description": "Prépare le panneau pour afficher les résultats\nNotes\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "prepare_panneau_result",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 296,
            "description": "Retourne le code HTML pour la définition de la recherche",
            "itemtype": "property",
            "name": "html_form",
            "static": 1,
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 311,
            "description": "Retourne le code HTML pour le panneau de résultat",
            "itemtype": "property",
            "name": "html_panneau_result",
            "type": "{String}",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 325,
            "description": "TODO\n  * Chercher seulement dans les fiches chargées (option très spéciale)\n  * types de fiches\n  * ptype des paragraphes\n  * Même les fiches \"not printed\"",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 341,
            "itemtype": "property",
            "name": "fieldset_params",
            "type": "String",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Search/>Search.js",
            "line": 357,
            "itemtype": "property",
            "name": "fieldset_options",
            "type": "String",
            "class": "Search",
            "module": "Search.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/edition/Collection.js",
            "line": 18,
            "description": "Destruction de la collection courante\nNotes\n-----\n  * Par mesure de prudence, il n'est possible de détruire que la collection\n    test, pas la \"current\".\n  * L'application est rechargée en fin de processus pour tout ré-initialiser.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Collection",
            "module": "edition.collection.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/extension/String.js",
            "line": 15,
            "description": "Formate le string pour affichage (en remplaçant notamment les balises films,\nscénodico, etc.)  \n\nNOTES\n-----\n  * C'est un raccourci pour ColText.formate(<this>, <cible>)",
            "itemtype": "method",
            "name": "formate",
            "params": [
                {
                    "name": "cible",
                    "description": "La fiche cible du lien (utile pour les références)",
                    "type": "Fiche"
                }
            ],
            "return": {
                "description": "Le string courant formaté.",
                "type": "String"
            },
            "example": [
                "\n    <texte>.formate"
            ],
            "class": "Chapter",
            "module": "String"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/extension/String.js",
            "line": 36,
            "description": "Formate une balise (tag) HTML en fonction des attributs transmis\nNotes\n  * La méthode n'est pas très pertinente en mode simple, mais peut le devenir\n    lorsque les attributs sont définis dynamiquement.\n  * La méthode ne retourne QUE l'ouverture de la balise, pas sa fermeture,\n    sauf bien entendu quand il s'agit d'une fiche sans fermeture (img, input)\n  * Si une value est NULL ou FALSE, elle est passée. Donc, pour mettre un\n    null ou un false dans un champ, il faut le donner en string : \"null\" ou\n    \"false\".",
            "itemtype": "method",
            "name": "to_tag",
            "params": [
                {
                    "name": "attrs",
                    "description": "Attributs à placer",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "La balise d'ouverture formatée",
                "type": "String"
            },
            "example": [
                "\n  menu = \"select\".to_tag({id:\"monId\", onclick:\"clean()\"})\n  //=>   <select id=\"monId\" onclick=\"clean()\">"
            ],
            "class": "Chapter",
            "module": "String"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Book_class.js",
            "line": 13,
            "description": "Procède à la publication du livre, c'est-à-dire à la fabrication des\nfichier postscript et PDF par mon RLatex.\n\nNotes\n-----",
            "itemtype": "method",
            "name": "publish",
            "async": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Options de publication",
                    "type": "Object",
                    "props": [
                        {
                            "name": "only_tdm",
                            "description": "Si true, n'imprime que la table des matières du livre",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Chapter",
            "module": "String"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Book_class.js",
            "line": 35,
            "description": "Retour ajax de la méthode `publish`",
            "itemtype": "method",
            "name": "retour_publish",
            "params": [
                {
                    "name": "rajax",
                    "description": "Objet remonté par Ajax",
                    "type": "Object"
                }
            ],
            "class": "Chapter",
            "module": "String"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Chapter_class.js",
            "line": 19,
            "itemtype": "property",
            "name": "book Le livre auquel appartient le chapitre (ou null)",
            "type": "Book",
            "class": "Chapter",
            "module": "Chapter"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 22,
            "description": "Données pour les types de fiche",
            "itemtype": "property",
            "name": "datatype",
            "type": "{Object}",
            "static": 1,
            "final": 1,
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 37,
            "description": "Données pour les paramètres des fiches (verso)\nNotes\n-----\n  * L'`id` correspond au nom de la propriété de classe",
            "itemtype": "property",
            "name": "PARAMETRES_FICHE",
            "type": "{Array} d'{Object}",
            "statif": "",
            "final": 1,
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 52,
            "description": "Données pour les options des fiches (verso)\nNotes\n-----\n  * Pour des types propres à un type de fiche particulier, utiliser\n    `only:<type>` ou `sauf:<type>`\n  * L'`id` correspond au nom de la propriété de classe",
            "itemtype": "property",
            "name": "OPTIONS_FICHE",
            "type": "{Array} d'{Object}",
            "static": 1,
            "final": 1,
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 75,
            "description": "Table des fiches instanciées\n----------------------------\n\n NOTES\n -----\n * En clé, l'identifiant ({Number}), en valeur l'instance de la fiche\n * C'est la méthode `create' de la fiche qui la met dans la liste\n * Utiliser la méthode `FICHES.get' pour obtenir une fiche de cette liste.",
            "itemtype": "property",
            "name": "list",
            "type": "Object",
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 90,
            "description": "Nombre de fiches dans `list`",
            "itemtype": "property",
            "name": "length",
            "type": "Number",
            "default": "0",
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 104,
            "description": "Fiche courante",
            "itemtype": "property",
            "name": "current",
            "type": "Fiche",
            "default": "null",
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 123,
            "description": "Reçoit un objet DOM de fiche (class fiche) et\nretourne la fiche correspondante.",
            "itemtype": "method",
            "name": "domObj_to_fiche",
            "params": [
                {
                    "name": "obj",
                    "description": "Element Dom appartenant à une fiche ou l'objet\n           (tag:fiche) de la fiche elle-même.",
                    "type": "HTMLDom|jQuerySet"
                }
            ],
            "return": {
                "description": "L'instance Fiche ({Book}, {Chapter} etc) de la fiche propriétaire\n       de ce DOM Element.",
                "type": "Fiche"
            },
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 281,
            "description": "Dispatch des fiches\n\nNOTES\n-----\n  * Avec le nouveau fonctionnement, il n'y a plus de problème au niveau\n    des parents ou des enfants. Les fiches sont instanciées à leur première\n    détection (soit ici, soit dans les enfants/parent des fiches traitées),\n    puis elles sont ensuites \"remplies\" avec les données si la fiche est\n    traitées plus tard ici.\n  * Par défaut, les fiches sont maintenant créées fermées, donc on doit\n    passer seulement en revue les fiches qui doivent être ouvertes.\n  * Cette méthode est appelée à tout chargement de fiches par groupe\n  * Seule une fiche passant par cette méthode peut voir si `loaded` marqué\n    true. Toutes les autres fiches sont considérées comme non chargées.\n\nPRODUIT\n-------\n  * La création de la fiche (toujours, entendu qu'une fiche passant par\n    ce dispatch a forcément toutes ses données)\n\n  * La tenue à jour de `Collection.books'",
            "itemtype": "method",
            "name": "dispatch",
            "params": [
                {
                    "name": "data",
                    "description": "Liste des fiches remontées par `Collection.load.data`",
                    "type": "Array"
                }
            ],
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 375,
            "description": "Montre la fiche\n\nNotes\n-----\n  * Cette fonction est appelée principalement un clic sur une référene\n    dans le texte. La fiche peut-être chargée ou non, et d'un type indifférent.\n    La méthode s'arrange dans tous les cas pour la montrer. Ce qui consiste, \n    suivant son type, à :\n      * \"highlighter\" un livre (clignotement)\n      * \"highlighter\" un chapitre après avoir ouvert son livre si nécessaire.\n      * Ouvrir une page\n      * Ouvrir la page d'un paragraphe et scroller jusqu'à lui\n  * La fiche peut ne pas être chargée. Et ses parents non plus s'il s'agit\n    d'un paragraphe.\n  * La question se pose de savoir si je fais une méthode ici qui traite tous\n    les cas où si je fais une méthode propre pour chaque type de fiche.",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "id",
                    "description": "Identifiant de la fiche à montrer",
                    "type": "String|Number"
                },
                {
                    "name": "type",
                    "description": "Type de la fiche à montrer.",
                    "type": "String"
                },
                {
                    "name": "evt",
                    "description": "Evènement transmit à la méthode. N'est défini\n                              que lors de l'appel direct.",
                    "type": "Event"
                }
            ],
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 413,
            "description": "Ouvre la ou les fiches données en argument\n\nNotes\n  * N'ouvre les fiches que si elles sont construites (`built` = true)",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "arr",
                    "description": "Liste d'instance Fiche ou Instance Fiche",
                    "type": "Array|Fiche"
                }
            ],
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 542,
            "description": "Instancie une fiche avec les données `data`.",
            "itemtype": "method",
            "name": "create_instance_fiche_of_type",
            "params": [
                {
                    "name": "data",
                    "description": "Contient au mininum `type` pour instancier une nouvelle\n        fiche de ce type (création) et contient `id` si c'est l'instanciation\n        d'une fiche existante.",
                    "type": "Object"
                }
            ],
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 570,
            "description": "Crée entièrement une nouvelle fiche à partir des +data+\ntransmises.\n\nNOTES\n-----\n  * Il s'agit d'une toute nouvelle fiche, jamais d'une fiche\n    existente.\n  * Pour le moment, la fiche n'est pas marquée modifiée.",
            "itemtype": "method",
            "name": "full_create",
            "params": [
                {
                    "name": "data",
                    "description": "Les données pour la nouvelle fiche",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Les options pour la création",
                    "type": "Object|Null",
                    "props": [
                        {
                            "name": "focus_titre",
                            "description": "Si TRUE, on passe le titre en édition",
                            "type": "Boolean"
                        },
                        {
                            "name": "focus_texte",
                            "description": "Si TRUE, on passe le texte en édition (même chose que pour\n                                        focus_titre, mais pour un paragraphe)",
                            "type": "Boolean"
                        },
                        {
                            "name": "select",
                            "description": "Si TRUE, on sélectionne la fiche",
                            "type": "Boolean"
                        },
                        {
                            "name": "after_fiche",
                            "description": "Si défini, c'est la fiche après laquelle on doit\n                                        placer la nouvelle fiche.",
                            "type": "Fiche"
                        },
                        {
                            "name": "before_fiche",
                            "description": "Idem, mais en fournissant la fiche après.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "La nouvelle fiche créée",
                "type": "Fiche"
            },
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/FICHES.js",
            "line": 730,
            "description": "Initialisation complète des fiches\n\nNotes\n-----\n  * C'est une propriété complexe (=> à appeler sans parenthèses)\n  * Elle procède aussi au nettoyage de la table.",
            "itemtype": "method",
            "name": "init_all",
            "class": "FICHES",
            "module": "FICHES"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/PARAGRAPHS.js",
            "line": 13,
            "description": "Data pour le `ptypes` des paragraphes",
            "itemtype": "property",
            "name": "PTYPES",
            "type": "Object",
            "static": 1,
            "final": 1,
            "class": "PARAGRAPHES",
            "module": "PARAGRAPHS"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/PARAGRAPHS.js",
            "line": 31,
            "description": "Indique que le menu des ptypes n'a pas été encore construit et inséré\ndans la page",
            "itemtype": "property",
            "name": "menu_ptypes_ready",
            "type": "Boolean",
            "default": "False",
            "class": "PARAGRAPHES",
            "module": "PARAGRAPHS"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/PARAGRAPHS.js",
            "line": 39,
            "description": "La fiche du paragraphe courant",
            "itemtype": "property",
            "name": "current",
            "type": "{Paragraph}",
            "default": "null",
            "class": "PARAGRAPHES",
            "module": "PARAGRAPHS"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/PARAGRAPHS.js",
            "line": 194,
            "description": "Construit le menu des ptypes\nNotes\n  * C'est la méthode qui demande la construction du code et l'insert\n    simplement dans le body. La méthode appelante doit le placer au\n    bon endroit.\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "prepare_menu_ptypes",
            "class": "PARAGRAPHES",
            "module": "PARAGRAPHS"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/PARAGRAPHS.js",
            "line": 209,
            "description": "Code HTML pour le menu des ptypes",
            "itemtype": "property",
            "name": "html_menu_ptypes",
            "type": "String",
            "class": "PARAGRAPHES",
            "module": "PARAGRAPHS"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Page_class.js",
            "line": 19,
            "itemtype": "property",
            "name": "book Le livre auquel appartient la page (ou null)",
            "type": "Book",
            "class": "Page",
            "module": "Page"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 23,
            "itemtype": "property",
            "name": "book Le livre auquel appartient le paragraphe (ou null)",
            "type": "Book",
            "class": "Paragraph",
            "module": "Paragraph"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 34,
            "description": "Le « ptype » du paragraphe indique son type propre, à savoir :\n  * text  : Un texte \"normal\" qui sera juste formaté (défaut)\n  * file  : Un paragraphe qui charge un fichier externe\n  * code  : Du code à interpréter.",
            "itemtype": "property",
            "name": "ptype",
            "type": "String|Null",
            "class": "Paragraph",
            "module": "Paragraph"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 49,
            "description": "Liste des styles du paragraphe (ou null/indéfini)\n\n NOTES\n -----\n * Les styles sont définis dans le fichier `./js/data/paragraph_styles.js`\n   qui est un fichier produit programmatiquement à partir des informations\n   sur les styles contenus dans `./data/asset/paragraph_styles.txt`.",
            "itemtype": "property",
            "name": "style",
            "type": "{Array}",
            "default": "{Undefined|Null}",
            "class": "Paragraph",
            "module": "Paragraph"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 73,
            "description": "Retourne le style par défaut du paragraphe suivant s'il est défini",
            "itemtype": "property",
            "name": "next_style",
            "type": "String",
            "class": "Paragraph",
            "module": "Paragraph"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 91,
            "description": "Retourne le code pour l'attribut `class` de la balise en fonction des styles\ndu paragraphe.",
            "itemtype": "property",
            "name": "class_css",
            "type": "String",
            "default": "\"\" (chaine vide)",
            "class": "Paragraph",
            "module": "Paragraph"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 125,
            "description": "DOM Element du menu ptypes\nNotes\n  * Le menu des \"ptypes\" est un select unique, qui se déplace de fiches\n    en fiche quand on les retourne. La propriété présente renvoie donc\n    le menu mais seulement quand il se trouve dans son verso.",
            "itemtype": "property",
            "name": "menu_ptypes",
            "type": "JQuerySet",
            "class": "Paragraph",
            "module": "Paragraph"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 134,
            "description": "Déplace le menu des ptypes dans ce paragraphe",
            "itemtype": "method",
            "name": "append_menu_ptypes",
            "class": "Paragraph",
            "module": "Paragraph"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 210,
            "description": "Méthode appelée quand on modifie le ptype du paragraphe",
            "itemtype": "method",
            "name": "onchange_ptype",
            "params": [
                {
                    "name": "ptype",
                    "description": "Le ptype choisi.",
                    "type": "String"
                }
            ],
            "class": "Paragraph",
            "module": "Paragraph"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/livre/Paragraph_class.js",
            "line": 226,
            "description": "Méthode appelée quand on applique les styles choisis pour\nle paragraphe.",
            "itemtype": "method",
            "name": "on_change_styles",
            "params": [
                {
                    "name": "selectors",
                    "description": "Liste des styles choisis",
                    "type": "Array"
                }
            ],
            "class": "Paragraph",
            "module": "Paragraph"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/>OBJETS_Dom.js",
            "line": 8,
            "description": "Constante définissant les raccourcis classiques",
            "deprecated": true,
            "deprecationMessage": "Préférer les objets de ContextualHelp.",
            "itemtype": "property",
            "name": "SHORTCUTS_COMMUNS",
            "static": 1,
            "class": "OBJETS.Dom",
            "module": "OBJETS.Dom",
            "submodule": "Dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/>OBJETS_Dom.js",
            "line": 20,
            "description": "Données pour les trois focus possibles dans le panneau. Celui sur la\nbande l'onglet, celui sur le listing et celui sur les options d'affichage.\n \nPROPERTIES\n----------\n  * id      {String} Identifiant du focus\n  * next    {String} Identifiant du prochain focus si TAB est utilisé\n  * prev    {String} Focus précédent avec TAB\n  * obj     {jQuery Set} de l'élément DOM sur lequel placer le focus\n  * help    {String} Message d'aide à afficher.",
            "itemtype": "property",
            "name": "DFOCUS",
            "type": "{Object}",
            "static": 1,
            "class": "OBJETS.Dom",
            "module": "OBJETS.Dom",
            "submodule": "Dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/>OBJETS_Dom.js",
            "line": 97,
            "description": "Ouvre le panneau des films",
            "itemtype": "method",
            "name": "show_panneau",
            "class": "OBJETS.Dom",
            "module": "OBJETS.Dom",
            "submodule": "Dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/>OBJETS_Edition.js",
            "line": 43,
            "description": "Pour enregistrer les modifications (ou créer un nouveau item)\n\n NOTES\n -----\n * Si la méthode `get_values` rencontre des valeurs invalides, elle renvoie\n   false ce qui interrompt la procédure de sauvegarde.",
            "itemtype": "method",
            "name": "save",
            "return": {
                "description": "true en cas de succès, false en cas de valeur invalide."
            },
            "class": "OBJETS",
            "module": "OBJET",
            "submodule": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/OBJETS.js",
            "line": 23,
            "description": "Table de tous les items connus, avec leurs data minimum.\nPar exemple, pour les films, il s'agit du titre, du titre français, de\nl'identifiant et du code ascii de la première lettre.\n\n# NOTES\n\n    * Pour les films, cf. :\n      ../interdata/film/data_js/films_data.js\n    * Pour les mots cf. :\n      ../interdata/scenodico/data_js/dico_data.js",
            "itemtype": "property",
            "name": "DATA",
            "type": "Hash",
            "class": "OBJETS",
            "module": "objets"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/OBJETS.js",
            "line": 151,
            "description": "Affiche l'aperçu de l'item survolé dans le texte.\n\nLa méthode doit afficher une version détaillée de l'élément concerné.\n\n# NOTES\n\n  * Méthode appelée quand on glisse la souris sur un item (mot, film, etc.)\n  * Un bind click est placé sur l'aperçu, pour pouvoir éditer l'élément.",
            "itemtype": "method",
            "name": "show_apercu",
            "params": [
                {
                    "name": "domObj",
                    "description": "Dom element sur lequel on glisse la souris. C'est dans\n                  celui-ci qu'on mettre le panneau de détail de l'élément.",
                    "type": "DOMELement"
                },
                {
                    "name": "id",
                    "description": "Identifiant  de l'item.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "OBJETS",
            "module": "objets"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/object/Objet_class.js",
            "line": 39,
            "description": "Place l'apercu de l'item dans l'objet DOM +domObj+\nen le créant si nécessaire.\n \nNOTES\n-----\n\n  * L'aperçu est également décalé à droite ou à gauche suivant la\n    position de son contenant dans le texte pour être parfaitement visible.\n  * On affiche pas l'aperçu si le mot se trouve dans un aperçu.",
            "itemtype": "method",
            "name": "apercu_in",
            "params": [
                {
                    "name": "domObj",
                    "description": "Element du DOM dans lequel placer l'aperçu.\n                C'est normalement un lien/balise dans le texte.",
                    "type": "DOMElement"
                }
            ],
            "class": "ObjetClass",
            "module": "ObjetClass"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 21,
            "description": "Définit et retourne le JID (selector jQuery) de la fiche",
            "itemtype": "property",
            "name": "jid",
            "type": "{String}",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 43,
            "description": "Objet DOM du recto de la fiche (jQuerySet)",
            "itemtype": "property",
            "name": "recto",
            "type": "JQuerySet",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 51,
            "description": "Objet DOM du verso de la fiche (jQuerySet)",
            "itemtype": "property",
            "name": "verso",
            "type": "JQuerySet",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 70,
            "description": "Définit si nécessaire l'objet jQuery de la fiche et le retourne\n\nNOTES\n-----\n  * C'est un set jQuery, mais il n'est défini QUE si l'objet existe\n    vraiment dans le DOM. Inutile de faire `fiche.obj.length == 0` pour\n    s'assurer qu'il existe bien, `fiche.obj` suffit car il renvoie null\n    si la fiche n'est pas encore construite.",
            "itemtype": "property",
            "name": "obj",
            "type": "JQuerySet",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 92,
            "description": "DOM élément de la fiche",
            "itemtype": "property",
            "name": "dom_obj",
            "type": "HTMLDom",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 103,
            "description": "Ouvre la fiche\n--------------\n\nNOTES\n-----\n  * L'opération produit des résultats différents en fonction du type\n    de la fiche. Par exemple, pour une page, on la sort de son parent\n    et on montre ses enfants (paragraphes).\n  * Propriété complexe, donc appeler sans parenthèses.\n  * Si une méthode doit suivre, définir `this.pour_suivre_open`\n  * La méthode peut être appelée même si la fiche est ouverte, dans lequel\n    cas seul la méthode pour suivre sera traitée.\n  * La méthode est récursive, c'est-à-dire qu'elle ouvre tous les parents\n    avant de s'ouvrir.\n  * Lorsque l'option \"Livres rangés\" est choisie dans les préférences de\n    l'application, la méthode utilise un comportement particulier pour ouvrir\n    le livre : elle le décale vers la droite de UI.GRID_X.",
            "itemtype": "method",
            "name": "open",
            "async": 1,
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 156,
            "description": "Ferme la fiche\n\nNotes\n-----\n  * Propriété complexe => appeler sans parenthèses\n  * En mode fermé, le titre est disabled\n  * Si la préférences \"Livre rangé\" est true et que c'est un livre, on\n    doit le recaler à sa place.",
            "itemtype": "method",
            "name": "close",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 229,
            "description": "Montrer la fiche (quel que soit son type)\n\nNotes\n-----\n  * La méthode est principalement appelée quand on clique sur une référence\n    dans un texte. Cela produit un appel à `FICHES.show` qui appelle la\n    méthode `show` propre à chaque type de fiche.\n  * Pour une page, la montrer consiste à l'ouvrir. Mais cette page peut ne pas\n    être encore chargée, donc il faut s'assurer qu'elle puisse être ouverte\n    en chargeant tous ses parents si elle en a.\n  * La méthode est asynchrone seulement si ses parents et ses enfants ne sont\n    pas encore chargés",
            "itemtype": "method",
            "name": "show",
            "async": 1,
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 262,
            "description": "Retourne la fiche (sélectionnée)\nNotes\n  * À sa construction, la fiche ne prépare pas son verso (pour être plus efficace)\n    Donc lorsqu'on retourne pour la première fois une fiche, il faut s'assurer\n    que son verso est preparé (`verso_ready`). Cela se fait dans la méthode\n    `regle_verso`.",
            "itemtype": "property",
            "name": "retourne",
            "type": "{Nothing}",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 288,
            "description": "Méthode appelée à la fin de chaque méthode `show` pour traiter \nla visibilité suivant les options\nNotes\n-----\n  * Les options sont défines dans FICHES.show et dépendent des modifiers\n    utilisés en cliquant sur la référence.\n  * Si aucune option de sélection ou d'ouverture n'est demandé, la méthode\n    fait simplement clignoter la fiche.",
            "itemtype": "method",
            "name": "suite_show",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object|Null",
                    "props": [
                        {
                            "name": "select",
                            "description": "Si true, sélectionne la fiche",
                            "type": "Boolean"
                        },
                        {
                            "name": "open",
                            "description": "Si true, ouvre la fiche",
                            "type": "Boolean"
                        },
                        {
                            "name": "suivre",
                            "description": "La méthode pour suivre, if any",
                            "type": "Function"
                        },
                        {
                            "name": "no_light",
                            "description": "Si true, pas de clignotement",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 314,
            "description": "Fait clignoter la fiche\nNotes\n-----\n  * La méthode/procédure qui appelle cette méthode doit s'assurer que\n    la fiche est chargée et visible",
            "itemtype": "method",
            "name": "highlight",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 355,
            "description": "Déplacement de l'enfant vers le haut\n\nNotes\n-----\n  * Méthode \"complexe\", donc invoquée sans parenthèses\n  * Je pourrais utiliser la méthode this.onchange_ordre_enfants pour prendre\n    le nouvel ordre à chaque fois, mais ça risque d'être intense pour rien.\n    Au lieu de ça, j'utilise un timeout qui appelera la méthode seulement \n    lorsque les déplacements sembleront terminés.",
            "itemtype": "method",
            "name": "move_up",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 380,
            "description": "Déplacement de l'enfant vers le bas\nNotes\n-----\n  * Cf. les notes de la méthode `move_up`.",
            "itemtype": "method",
            "name": "move_down",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 491,
            "description": "Sélection la fiche précédente (sibling)\n\nNotes\n-----\n  * Le traitement est spécial pour les livres, ils sont conservés\n    dans l'ordre de leur placement sur la table",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 619,
            "description": "Propriété principale en fonction du type de la fiche. Pour un paragraphe,\nla propriété principale est `texte`, pour toutes les autres fiches, c'est\n`titre`",
            "itemtype": "property",
            "name": "main_prop",
            "type": "String",
            "static": 1,
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 631,
            "description": "Retourne le champ principal (soit le DIV soit le champ de saisie suivant\nle contexte) \nNotes\n  * Pour forcer la définition, utiliser `this._main_field = null'\n  * La propriété se sert de `this.opened` pour savoir si on est en édition\n    ou non. Mais est-ce vraiment la bonne propriété à regarder ?…",
            "itemtype": "property",
            "name": "main_field",
            "type": "JQuerySet",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 759,
            "description": "Passe le titre/texte en édition\n\nNOTES\n-----\n  * C'est une méthode composée avec un propriété complexe. Elle\n    s'appelle sans arguments ni parenthèses.\n\nPRODUIT\n-------\n  * Sélectionne la fiche\n  * Remplace le div contenant le titre (ou le texte) par un champ\n    de saisie.\n  * Place les observers sur le champ de saisie.\n  * Sélectionne le texte",
            "itemtype": "method",
            "name": "enable_main_field",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js",
            "line": 813,
            "description": "Clone/Déclone la fiche courante\n\nNOTES\n-----\n  * Propriété complexe (appelé sans parenthèses)\n  * \"Cloner la fiche\" consiste à :\n      * Placer un clone de la fiche dans le parent, à la place de la fiche\n      * Sortir le DOM Objet du parent pour le mettre sur la table\n  * \"Décloner\" la fiche consiste à :\n      * Remettre la fiche dans le parent\n      * Détruire le clone",
            "itemtype": "method",
            "name": "clone",
            "class": "Fiche",
            "module": "fiche_dom",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_Verso.js",
            "line": 7,
            "description": "Retourne le code HTML du VERSO de la fiche\n\nNotes\n  * À la construction initiale de la fiche, on ne renvoie que la balise\n    du verso, vide. C'est seulement lorsque la fiche sera retournée la\n    première fois que le verso sera défini.",
            "itemtype": "property",
            "name": "html_verso",
            "type": "{String}",
            "final": 1,
            "class": "Fiche",
            "module": "fiche_dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_Verso.js",
            "line": 25,
            "description": "Prépare le verso (au premier retournement de la fiche)\nNotes\n  * C'est cette pseudo méthode qui met `verso_ready` à true",
            "itemtype": "property",
            "name": "prepare_verso",
            "type": "{Method}",
            "class": "Fiche",
            "module": "fiche_dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_Verso.js",
            "line": 78,
            "description": "Code HTML des paramètres propres aux paragraphes",
            "itemtype": "property",
            "name": "html_parametres_paragraph",
            "type": "String",
            "class": "Fiche",
            "module": "fiche_dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_Verso.js",
            "line": 88,
            "description": "Code HTML du fieldset des options à l'arrière de toute fiche\n\nNotes\n-----\n  * Des options propres à chaque type de fiche peuvent être ajoutées en\n    définissant la propriété complexe `options_supplementaires` qui doit\n    renvoyer la liste des options.",
            "itemtype": "property",
            "name": "html_fieldset_options",
            "type": "{String}",
            "class": "Fiche",
            "module": "fiche_dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 35,
            "description": "Indicateur d'édition\nCette propriété est mise à TRUE quand le texte (pour un paragraphe) ou\nle titre (pour autre type de fiche) est en édition (input/textarea au lieu\nde div)",
            "itemtype": "property",
            "name": "edited",
            "type": "Boolean",
            "default": "False",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 75,
            "description": "Retourne un {Array} des minidata des enfants",
            "itemtype": "property",
            "name": "enfants_as_minidata",
            "type": "{Array}",
            "default": "[]",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 107,
            "description": "Marque la fiche ouverte ou fermée (ou retourne la propriété)\nTrue si la fiche est ouverte, false dans le cas contraire.\nNotes\n-----\n  * La propriété se contente d'ajouter ou de retirer la class 'opened'\n    à l'objet DOM de la fiche.",
            "itemtype": "property",
            "name": "opened",
            "type": "Boolean",
            "default": "false",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 125,
            "description": "Returne true si la fiche est fermée, false si ouverte",
            "itemtype": "property",
            "name": "closed",
            "type": "Boolean",
            "default": "true",
            "readonly": "",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 134,
            "description": "Marque l'élément rangé ou non rangé (ou retourne la propriété ranged)\n\nNOTES\n-----\n  * La valeur retournée dépend du type de fiche.\n      * Pour un livre, la valeur est toujours false\n      * Pour un chapitre ou un paragraphe, dès qu'ils ont un parent,\n        ils sont toujours rangés.\n      * Pour un page, dépend de son ouverture / fermeture.",
            "itemtype": "property",
            "name": "ranged",
            "type": "Boolean",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 157,
            "description": "Vérifie si la fiche peut être ouverte\nPour être ouverte, la fiche doit être `loaded' et ses enfants doivent\nl'être aussi.\n\nNOTES\n-----\n  * Les enfants, dans la fiche, sont toujours des instances Fiche.\n    (réglées au chargement du parent). C'est leur propriété `loaded'\n    qui détermine si elles sont chargées ou non.\n  * On peut appeler la méthode `rend_openable(<poursuivre>)' pour rendre\n    la fiche ouvrable après le test `<fiche>.is_not_openable'\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "is_openable",
            "return": {
                "description": "true si la fiche peut être ouverte, false otherwise.",
                "type": "Boolean"
            },
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 194,
            "description": "Positionne la fiche sur le table en fonction de :\n- son état ranged ou non\n- ses top / left\nNotes\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "positionne",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 209,
            "description": "Création d'une nouvelle fiche\n-----------------------------\n\nNOTES\n-----\n  * Il ne suffit pas de créer la fiche pour qu'elle soit mise en \n    sauvegarde. Cela permet de les créer tranquillement lors du chargement\n    de la collection.\n    C'est seulement lorsqu'un élément de la fiche aura été modifié (et\n    notamment le titre ou le texte — paragraph) qu'elle sera prête pour\n    l'enregistrement.",
            "itemtype": "property",
            "name": "create",
            "type": "Method",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 448,
            "description": "Copie la fiche\nNotes\n  * En réalité, la \"copie\" de la fiche ne consiste qu'à mettre sa référence\n    dans App.clipboard\n  * On reconnait une fiche coupée d'une fiche copiée au 'cuted' qui est \n    ajouté quand on coupe la fiche.",
            "itemtype": "property",
            "name": "copy",
            "type": "Method",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 465,
            "description": "Coupe la fiche\nNotes\n  * En réalité, la \"coupe\" de la fiche ne consiste qu'à mettre sa référence\n    dans App.clipboard en mettant son cuted à true et en masquant son objet\n    dans le DOM (pour ne pas avoir à le reconstruire.)",
            "itemtype": "property",
            "name": "cut",
            "type": "Method",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 485,
            "description": "Colle la fiche\nNotes\n  * Pour coller la fiche copiée/coupée, il faut qu'un parent ou un frère\n    potentiel soit sélectionné. Si c'est un parent, on ajoute la fiche à la\n    fin. Sinon, on l'ajoute avant le parent sélectionné.\n  * Si la fiche avait été copiée, il faut reconstruire une fiche de toute pièce\n    en se servant des informations de la fiche copiée. Si au contraire la fiche\n    a été coupée, il faut la sortir de son parent et la remettre dans le nouveau.\n\nTODO: Pour le moment, on ne peut pas coller une fiche sur la table, mais on\ndevrait pouvoir le faire.",
            "itemtype": "property",
            "name": "paste",
            "type": "Method",
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 590,
            "description": "Appelé quand on relâche un enfant sur la fiche courante",
            "itemtype": "method",
            "name": "on_drop",
            "params": [
                {
                    "name": "evt",
                    "description": "L'évènement drop",
                    "type": "Event"
                },
                {
                    "name": "ui",
                    "description": "\n         L'objet déplacé (ui.element est l'original)\n              Note : l'original peut être soit une fiche réelle, soit\n              un card-tool. Lorsque c'est une card-tool, il faut créer la\n              nouvelle fiche.",
                    "type": "JQuerySet"
                }
            ],
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 651,
            "description": "Appelé quand on change l'ordre des enfants de la fiche, soit par le\nsortable du div_items, soit par `move_up` ou `move_down` d'un des\nenfant.\n\nNOTES\n-----\n  * Plutôt que de s'embêter à étudier +ui+ pour savoir quel\n    élément a été déplacé, on compare la liste du DOM avec la liste des\n    enfants et on commence à traiter à partir de cet indice.\n  * Les deux arguments ne sont pas définis lorsque la méthode est appelée\n    depuis `move_up` et `move_down`.",
            "itemtype": "method",
            "name": "onchange_ordre_enfants",
            "params": [
                {
                    "name": "evt",
                    "description": "UpdateEvent généré par sortable",
                    "type": "Event"
                },
                {
                    "name": "ui",
                    "description": "L'objet envoyé par jquery",
                    "type": "Object"
                }
            ],
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 705,
            "description": "Ajout d'un enfant à la fiche\n\nNOTES\n-----\n  * C'est cette méthode qui doit être utilisée pour tout ajout\n    d'enfant.",
            "itemtype": "method",
            "name": "add_child",
            "params": [
                {
                    "name": "enfant",
                    "description": "de l'enfant à ajouter",
                    "type": "Fiche"
                },
                {
                    "name": "options",
                    "description": "Options d'insertion :",
                    "type": "Object",
                    "props": [
                        {
                            "name": "after",
                            "description": "Ajouter après cet enfant",
                            "type": "Fiche"
                        },
                        {
                            "name": "before",
                            "description": "Ajouter avant cet enfant",
                            "type": "Fiche"
                        }
                    ]
                }
            ],
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 782,
            "description": "Supprime un enfant de la fiche",
            "itemtype": "method",
            "name": "remove_child",
            "params": [
                {
                    "name": "enfant",
                    "description": "L'enfant à retirer.",
                    "type": "Fiche"
                }
            ],
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 819,
            "description": "Méthode appelée quand on change le texte (paragraphe) ou le titre (autres\nfiches) d'une fiche.\n\nNOTES\n-----\n  * La méthode interdit d'enregistrer une donnée vide.\n  * Cela peut se produire lorsqu'on quitte le champ, ou lorsque\n    l'on presse la touche RETURN sur le champ.\n  * C'est vraiment cette fonction qui inaugure le changement du\n    titre, car si c'était `titre=` (propriété complexe), on aura\n    une difficulté à la définition des fiches remontées.",
            "itemtype": "method",
            "name": "onchange_texte",
            "params": [
                {
                    "name": "evt",
                    "description": "L'Onchange Event.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "si la donnée a été prise en compte, {False} dans le cas contraire.",
                "type": "True"
            },
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 855,
            "description": "Traite la nouvelle valeur du paragraphe (si c'est un paragraphe) en\nfonction de son ptype. Pour le moment, la méthode se contente de transformer\nles `**' en retours chariot dans les paragraphes de ptype 'list' et 'code'",
            "itemtype": "method",
            "name": "value_by_ptype",
            "params": [
                {
                    "name": "value",
                    "description": "La valeur à traiter",
                    "type": "String"
                }
            ],
            "return": {
                "description": "la nouvelle valeur au besoin",
                "type": "String"
            },
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_class.js",
            "line": 877,
            "description": "Invoquée à la fin du drag d'une fiche, cette méthode enregistre la nouvelle\nposition de la fiche, la place sur la grille si les préférences l'exigent et\nindique que la fiche a été modifiée.\n \nNotes\n-----\n  * C'est la préférence `App.preferences.snap` qui détermine s'il faut placer\n    la fiche sur la grille (true par défaut)",
            "itemtype": "method",
            "name": "stop_drag",
            "params": [
                {
                    "name": "evt",
                    "description": "DragStopEvent déclenché.",
                    "type": "Event"
                },
                {
                    "name": "L'objet",
                    "description": "jQuery ayant déclenché le drag.",
                    "type": "jQuery.ui"
                }
            ],
            "class": "Fiche",
            "module": "Fiche"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 9,
            "description": "Charge toutes les données de la fiche",
            "itemtype": "method",
            "name": "load",
            "async": 1,
            "params": [
                {
                    "name": "poursuivre!~YUIDOC_LINE~!",
                    "description": "Méthode pour suivre. Si c'est une propriété complexe\n                          (à appeler ensuite sans parenthèses) elle doit être donnée\n                          en {String}, sinon, envoyer une fonction normale.",
                    "type": "String|Function"
                }
            ],
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 92,
            "description": "Retourne les données à enregistrer",
            "itemtype": "property",
            "name": "data",
            "return": {
                "description": "Les données à enregistrer dans la fiche",
                "type": "Hash"
            },
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 126,
            "description": "Le type de la fiche, qui détermine s'il s'agit d'un livre, d'un chapitre\nd'une page ou d'un paragraphe.\n\nNotes\n-----\n  * C'est une donnée sur 4 lettres ('book', 'chap', 'page' ou 'para')\n  * Ne pas confondre cette propriété avec le `ptype` du paragraphe.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 142,
            "description": "Le type humain de la fiche, par exemple \"livre\" pour 'book'",
            "itemtype": "property",
            "name": "human_type",
            "type": "String",
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 150,
            "description": "Méthode pratique, pour le débuggage, retournant <type>#<id> (p.e. 'book#12')",
            "itemtype": "property",
            "name": "type_id",
            "type": "String",
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 158,
            "description": "Type d'un enfant de la fiche courante\nNotes\n  * C'est un raccourci de FICHES.datatype[type].child_type",
            "itemtype": "property",
            "name": "child_type",
            "type": "String",
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 168,
            "description": "Retourne l'identifiant du livre auquel appartient (ou non) la fiche, quel\nque soit le type de la fiche. Lorsqu'elle est un livre, elle renvoie son propre\nidentifiant.",
            "itemtype": "property",
            "name": "book_id",
            "type": "Number|String",
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 188,
            "description": "Définit si la fiche ne doit pas être imprimée dans le livre\nNOTES\n-----\n  * Ça peut concerner tout un livre (par exemple pour de l'aide ou des notes)",
            "itemtype": "property",
            "name": "not_printed",
            "type": "Boolean",
            "default": "{Undefined}",
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 212,
            "description": "Met dans le App.clipboard l'instance {Ref} à la fiche courante. Cette\nréférence pourra être ensuite collée dans le texte.\nNotes\n-----\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "copy_reference",
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 234,
            "description": "Retourne la valeur principal de la fiche, i.e. son titre si ce n'est pas\nun paragraphe et son texte si c'est un paragraphe.\nNotes\n  * Propriété complexe",
            "itemtype": "property",
            "name": "main_value",
            "type": "{String}",
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 337,
            "description": "Retourne une valeur pour le champ principal (titre ou texte)\n\nNOTES\n-----\n  * Cette méthode renvoie le texte brut si +formate+ est FALSE\n    Dans le cas contraire, elle le met en forme.",
            "itemtype": "method",
            "name": "main_field_value",
            "params": [
                {
                    "name": "formate",
                    "description": "\n                 Si TRUE le texte est interprété, i.e. par exemple que\n                 ses balises de référence ([<balise>:<valeur>]) sont mises\n                 en forme. \n                 Si FALSE, le texte est renvoyé tel qu'il est enregistré.",
                    "type": "Boolean"
                }
            ],
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 362,
            "description": "Actualise l'affiche de la fiche au niveau de son titre ou de son texte (quand\nc'est un paragraphe)\nNotes\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "update_display",
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_data.js",
            "line": 379,
            "description": "Dispatch les données +data+ dans la fiche.",
            "itemtype": "method",
            "name": "dispatch",
            "params": [
                {
                    "name": "data",
                    "description": "Les données à dispatcher dans la fiche.",
                    "type": "Object"
                }
            ],
            "class": "DICO",
            "module": "fiche_data",
            "submodule": "data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_states.js",
            "line": 15,
            "description": "Pour savoir si la fiche a des enfants",
            "itemtype": "property",
            "name": "has_children",
            "type": "Boolean",
            "return": {
                "description": "TRUE si la fiche possède des s enfants.",
                "type": "Fiche"
            },
            "class": "DICO",
            "module": "fiche_data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_states.js",
            "line": 26,
            "description": "Pour savoir si la fiche est orpheline (sans parent)",
            "itemtype": "property",
            "name": "is_orpheline",
            "type": "Boolean",
            "return": {
                "description": "TRUE si la fiche n'a pas de parent."
            },
            "class": "DICO",
            "module": "fiche_data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/required/Fiche_states.js",
            "line": 35,
            "description": "Pour savoir si la fiche à un parent",
            "itemtype": "property",
            "name": "has_parent",
            "type": "Boolean",
            "return": {
                "description": "TRUE si la fiche n'est pas orpheline."
            },
            "class": "DICO",
            "module": "fiche_data"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/scenodico/>DICO_Edition.js",
            "line": 25,
            "description": "Liste des propriétés du mot qui pourront être\néditées et qui seront enregistrées.\n\nNOTES\n-----\n  = Le champ les recevant porte toujours l'id `dicoEdit-<property>'",
            "itemtype": "property",
            "name": "ITEM_PROPERTIES",
            "type": "Array",
            "static": 1,
            "final": 1,
            "class": "DICO",
            "module": "DICO",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/scenodico/>DICO_Edition.js",
            "line": 39,
            "description": "Mets les valeurs de l'instance +mot+ dans le formulaire.",
            "itemtype": "method",
            "name": "set_values",
            "params": [
                {
                    "name": "mot",
                    "description": "Instance du mot à éditer.",
                    "type": "Mot"
                }
            ],
            "class": "DICO",
            "module": "DICO",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/scenodico/>DICO_Edition.js",
            "line": 66,
            "description": "Récupère les valeurs éditées (pour enregistrement de l'instance Mot)",
            "itemtype": "method",
            "name": "get_values",
            "class": "DICO",
            "module": "DICO",
            "namespace": "Edition"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/scenodico/>Mot_class.js",
            "line": 21,
            "description": "Construit et retourne la balise à insérer dans une fiche\navec les options +options+",
            "itemtype": "method",
            "name": "balise",
            "params": [
                {
                    "name": "options",
                    "description": "des options.\n                  Ces options sont celles disponibles dans DICO.OPTIONS et\n                  sont insérées si elles existent en 3e paramètre de la\n                  balise. Elles permettront de composer le mot affiché",
                    "type": "Hash"
                }
            ],
            "return": {
                "description": "La balise construite pour le {Mot}, qui sera inséré dans\n                  le code est formaté à l'aide de la méthode `formate'.",
                "type": "String"
            },
            "class": "DICO",
            "module": "Mot",
            "submodule": "dom"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_html.js",
            "line": 18,
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "dfield",
                    "description": "Données pour la construction du select",
                    "type": "Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "Identifiant du select",
                            "type": "String"
                        },
                        {
                            "name": "class",
                            "description": "Class CSS éventuelle",
                            "type": "String"
                        },
                        {
                            "name": "onchange",
                            "description": "Le code à jouer quand on change la valeur",
                            "type": "String"
                        },
                        {
                            "name": "options",
                            "description": "Liste des options. Array d'objects {value, title}",
                            "type": "Array"
                        },
                        {
                            "name": "label",
                            "description": "Libellé eventuel à placer avant",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "UI.Html",
            "module": "UI_HTML",
            "submodule": "Html"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_html.js",
            "line": 38,
            "description": "Construction d'un checkbox",
            "itemtype": "method",
            "name": "checkbox",
            "params": [
                {
                    "name": "dfield",
                    "description": "Données pour la construction du champ",
                    "type": "Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "Identifiant de la cb",
                            "type": "String"
                        },
                        {
                            "name": "label",
                            "description": "Label",
                            "type": "String"
                        },
                        {
                            "name": "class",
                            "description": "La class CSS éventuelle",
                            "type": "String"
                        },
                        {
                            "name": "indiv",
                            "description": "Si true, met la cb et son label dans un div",
                            "type": "Boolean"
                        },
                        {
                            "name": "onchange",
                            "description": "Code à jouer en cas de changement",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Le code HTML construit",
                "type": "String"
            },
            "class": "UI.Html",
            "module": "UI_HTML",
            "submodule": "Html"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_html.js",
            "line": 57,
            "itemtype": "method",
            "name": "tag",
            "params": [
                {
                    "name": "dfield",
                    "description": "Donnée pour le champ",
                    "type": "Object",
                    "props": [
                        {
                            "name": "tag",
                            "description": "La balise",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Le type (if any)",
                            "type": "String"
                        },
                        {
                            "name": "value",
                            "description": "La valeur de la tag (value)",
                            "type": "String"
                        },
                        {
                            "name": "class",
                            "description": "La class CSS (if any)",
                            "type": "String"
                        },
                        {
                            "name": "onchange",
                            "description": "Le code à jouer en cas de changement",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "le code HTML de la balise"
            },
            "class": "UI.Html",
            "module": "UI_HTML",
            "submodule": "Html"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 19,
            "description": "La cible courante\n\nC'est un {Object} tel que défini par la méthode `eventTextField' ci-dessous,\nqui contient notamment les propriétés 'dom' ({HTMLDom}), `jq' ({jQuerySet})\n`id', `jid', `value' ou encore `tag'.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 32,
            "description": "Les champs de saisie mémorisés par la méthode `memorize_current'\n\nEn clé, un timestamp permettant de récupérer le champ de saisie et\nde le remettre dans le même état (sélection)\nEn valeur, une {Target} telle que définie par la méthode\nthis.eventTextField",
            "itemtype": "property",
            "name": "targets",
            "type": "{Hash}",
            "default": "null",
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 46,
            "description": "Méthode appelée pour placer les observers sur les champs fournis\nen argument.",
            "itemtype": "method",
            "name": "bind",
            "params": [
                {
                    "name": "field",
                    "description": "Le champs qui doit être\n                  géré par UI.Input ou son container.",
                    "type": "DOM Element|Set jQuery"
                }
            ],
            "return": {
                "description": "Le set jQuery bindé.",
                "type": "JQuerySet"
            },
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 62,
            "description": "Détache le gestionnaire d'évènement du champ",
            "itemtype": "method",
            "name": "unbind",
            "params": [
                {
                    "name": "field",
                    "description": "Le champs qui doit être\n                  géré par UI.Input",
                    "type": "HTMLDom|Set jQuery"
                }
            ],
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 75,
            "description": "Attache ou détache le gestionnaire d'évènement 'focus', 'blur'\naux champs de saisie de texte +field+",
            "itemtype": "method",
            "name": "bind_or_unbind",
            "params": [
                {
                    "name": "fields",
                    "description": "Set jquery des éléments à binder ou unbinder.",
                    "type": "JQuerySet"
                },
                {
                    "name": "binding",
                    "description": "Si TRUE, bind le set jquery, sinon le unbind.",
                    "type": "Boolean"
                }
            ],
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 91,
            "description": "Méthode appelée quand on focusse dans le champ",
            "itemtype": "method",
            "name": "onfocus",
            "params": [
                {
                    "name": "evt",
                    "description": "L'évènement `focus' déclenché sur le set courant.",
                    "type": "Event"
                }
            ],
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 109,
            "description": "Méthode appelée quand on blur du champ",
            "itemtype": "method",
            "name": "onblur",
            "params": [
                {
                    "name": "evt",
                    "description": "L'évènement `blur' déclenché sur le set courant.",
                    "type": "BlurEvent"
                }
            ],
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 154,
            "description": "Méthode appelée quand on presse une touche sur le champ courant. Gère\nl'utilisation de touches ou combinaisons de touches spéciales, comme \nCMD+F pour insérer une balise film ou CMD+M pour insérer un mot du scénodico.",
            "itemtype": "method",
            "name": "onkeypress",
            "params": [
                {
                    "name": "evt",
                    "description": "Évènement `keypress' déclenché sur l'input courant.",
                    "type": "Event"
                }
            ],
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 195,
            "description": "Pour un ptype ≠ 'text', MAJ+Return permet de passer à la ligne",
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 297,
            "description": "Traite la donnée du champ courant en fonction de son data-type, peut la modifier\nà la volée ou interrompre la suite dans le cas d'une donnée incorrecte.\n\n\nNOTES\n-----\n  * La méthode est appelée dans le onblur, pour le moment\n    + quand on tab sur le champ\n  * Aucun traitement si le champ est vide\n  * Si une valeur est modifiée, il faut la remettre dans\n    le champ à l'aide de `this.target.jq.val(nouvelle valeur)'",
            "itemtype": "method",
            "name": "check_value",
            "return": {
                "description": "TRUE si tout est OK ou false dans le cas contraire, ce qui interrompt\n        la procédure en cours."
            },
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 393,
            "description": "Traite la donnée +acteurs+ avant sa vérification par la méthode {check_values}\ndans le cas d'un copié/collé d'une donnée prise dans IMDb.\n\nNOTES\n-----\n  * On reconnait une donnée IMDb pour un acteur car elle sépare le patronyme\n    de l'acteur du patronyme du personnage par un \"...\\n\". Noter que le \n    patronyme de l'acteur est répété au début, donc la donnée a le format :\n        <patronyme acteur> <patronyme acteur> ...\n        <patronyme personnage>\n\n    Elle sera transformée en :\n        <prenom acteur>, <nom acteur>, <prenom perso>, <nom perso>, null\n\n    note: Le `null` ci-dessus concerne la fonction du personnage dans le film.",
            "itemtype": "method",
            "name": "traite_as_acteurs_from_imdb",
            "params": [
                {
                    "name": "value",
                    "description": "La valeur complète contenu dans le champ acteurs.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "La valeur corrigée, si nécessaire.",
                "type": "String"
            },
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 431,
            "description": "Remplace la sélection de la cible courante",
            "itemtype": "method",
            "name": "set_selection_to",
            "params": [
                {
                    "name": "valeur",
                    "description": "Le texte (utiliser `_$_' pour faire référence au texte sélectionné)",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Optionnel, un {Hash} pour Selection.set\n                  Par défaut, c'est `{end:true}' qui placera le curseur après\n                  le texte remplacé.",
                    "type": "Object"
                }
            ],
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 445,
            "description": "Mémorise le champ courant, s'il est défini, et notamment sa sélection courante,\npour pouvoir retrouver le même état. Utilisé lorsque l'on doit par exemple\n“blurer” un champ de saisie pour choisir un film ou un mot, pour l'insérer\nensuite dans ce champ.\n\nNotes\n-----\n  * La méthode peut être appelée sans qu'il y ait de champ courant.\n    Par exemple, quand on affiche l'aperçu d'un mot (en passant sa souris\n    sur son nom) et qu'on clique sur la définition pour mettre le mot\n    en édition.\n  * C'est ensuite la méthode `retreive_current` qui remet le champ mémorisé\n    dans son état précédent.",
            "itemtype": "method",
            "name": "memorize_current",
            "params": [
                {
                    "name": "options",
                    "description": "Liste des options à prendre en compte. Pour le moment,\n                          ces options se résument à `blur` qui, si true, blur\n                          le champ courant.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "id Identifiant (dans `targets`) du champ mémorisé.",
                "type": "Number"
            },
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 489,
            "description": "Réactive le champ d'édition mémorisé par `memorize_current` en le remettant\ndans le même état de sélection.\n\nNotes\n-----\n  * Resélectionne ce qui était sélectionné dans le champ, très exactement.",
            "itemtype": "method",
            "name": "retreive_current",
            "params": [
                {
                    "name": "id",
                    "description": "Identifiant dans `targets` du champ à réactiver.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Les options à prendre en compte. Pour le moment, \n                          seule le propriété `focus` est utilisée. Si sa valeur\n                          est True, on focusse dans le champ.",
                    "type": "Object"
                }
            ],
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 539,
            "description": "Bind ou Unbind le 'keypress' sur la `target` courante, en fonction de la valeur\nde +focusing+\n\nRequis\n------\n  * {Object} this.target, définissant le champ courant (donnée complexe)",
            "itemtype": "method",
            "name": "set_keypress",
            "params": [
                {
                    "name": "focusing",
                    "description": "TRUE si on focus sur le champ, FALSE otherwise",
                    "type": "Boolean"
                }
            ],
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 565,
            "description": "Return le vrai jQuery Set de champ de text de +obj+",
            "params": [
                {
                    "name": "obj",
                    "description": "ou {jQuerySet} Soit un champ de saisie de text\n              Soit un container ({HTMLDom} ou {jQuerySet}) contenant des\n              champs de saisie de texte.",
                    "type": "HTMLDom"
                },
                {
                    "name": "obj",
                    "description": "Retourne le \"vrai\" champ de texte, même lorsque\n                            c'est son container (parent) qui est tranmis.",
                    "type": "HTMLDom|jQuerySet"
                }
            ],
            "itemtype": "method",
            "name": "real_field_from",
            "return": {
                "description": "Le set jQuery du ou des champs de texte.",
                "type": "JQuerySet"
            },
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 584,
            "description": "Retourne l'élément DOM ciblé par l'évènement +evt+",
            "itemtype": "method",
            "name": "eventTextField",
            "params": [
                {
                    "name": "evt",
                    "description": "Event quelconque.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "un {Hash} définissant :\n  * dom         {HTMLDom}   DOMElement de l'élément\n  * jq          {jQuerySet} jQuery Set de l'élément\n  * id          {Number}    Identifiant du champ\n  * jid         {Selector}  Sélecteur jQuery du champ\n  * tag         {String}    Le tagname de l'élément\n  * type        {String}    Le type de l'élément (\"text\", \"button\", etc.)\n  * value       {String|Null} La valeur de l'élément (if any)\n  * selection   {Object}    La sélection courante ({start, end, content})\n  * data_type   {String}    Le “data-type” du champ de saisie, qui permet de\n                            traiter et surveiller sa valeur.\n  * format      {String}    Le “format” de la donnée, si spécial (travaille souvent\n                            en conjugaison avec le `data_type`)\n  * is_input    {Boolean}   True si le champ est un input-text\n  * is_textarea {Boolean}   True si le champ est un textarea\n  * hasFiche    {Boolean}   True si le champ appartient à une fiche\n  * fiche_id    {String|Null} L'identifiant de la fiche, if any\n  * property    {String|Null} La propriété de la fiche que ce champ met en édition",
                "type": "Object"
            },
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 647,
            "description": "Constantes erreurs pour l'objet UI.Input",
            "itemtype": "property",
            "name": "ERRORS",
            "static": 1,
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 655,
            "description": "Provoque l'erreur d'identifiant +err_id+ dans `ERRORS`\n\nNotes\n-----\n  * C'est une erreur fatale (throw)\n  * On peut ajouter autant d'arguments que l'on veut, ils seront\n    envoyés en console.",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "err_id",
                    "description": "Identifiant de l'erreur dans `ERRORS`",
                    "type": "String"
                }
            ],
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js",
            "line": 674,
            "description": "Empêche l'Event +evt+ de se propager mais renvoie true.",
            "usage": ":  Simplement à la fin d'une méthode gérant un type d'évènement\n          avec `return this.unpropage(<evt>)'",
            "itemtype": "method",
            "name": "unpropage",
            "params": [
                {
                    "name": "evt",
                    "description": "L'évènement à traiter",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "true",
                "type": "Boolean"
            },
            "class": "UI.Input",
            "module": "UI_Input",
            "submodule": "Input"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/contextual_help.js",
            "line": 16,
            "description": "Initialisation (appelée quand ready)\n\n PRODUIT\n -------",
            "itemtype": "method",
            "name": "init",
            "class": "ContextualHelp",
            "module": "ContextualHelp"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/contextual_help.js",
            "line": 50,
            "description": "Attend +seconds+ avant d'adapter l'interface (utile par exemple lorsqu'un\npanneau est en train de se fermer).",
            "itemtype": "method",
            "name": "adapt_after",
            "params": [
                {
                    "name": "seconds",
                    "description": "seconds Nombre de secondes à attendre",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "0.5"
                }
            ],
            "class": "ContextualHelp",
            "module": "ContextualHelp"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/contextual_help.js",
            "line": 140,
            "description": "Infos sur la fiche courante, à afficher en amorce",
            "itemtype": "property",
            "name": "info_current_fiche",
            "class": "ContextualHelp",
            "module": "ContextualHelp"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 15,
            "description": "data-type pour un champ qui ne peut rester vide",
            "itemtype": "property",
            "name": "FIELD_NOT_EMPTY",
            "type": "String",
            "static": 1,
            "final": 1,
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 24,
            "description": "data-type pour un champ de type 'horloge'. La valeur de ce champ\nsera automatiquement transformée en horloge valide, ou une erreur sera\nproduite si la valeur donnée est incompatible avec une horloge.",
            "itemtype": "property",
            "name": "FIELD_HORLOGE",
            "type": "String",
            "static": 1,
            "final": 1,
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 35,
            "description": "data-type pour un champ de type nombre.",
            "itemtype": "property",
            "name": "FIELD_NUMBER",
            "type": "String",
            "static": 1,
            "final": 1,
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 44,
            "description": "data-type pour un champ de type pays (sur deux lettres minuscules).",
            "itemtype": "property",
            "name": "FIELD_PAYS",
            "type": "String",
            "static": 1,
            "final": 1,
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 53,
            "description": "data-type pour un champ de type « people », c'est-à-dire une liste de personnes.\n\nNOTES\n-----\n  * Le `data-format' du champ doit définir s'il s'agit d'un auteur, d'un\n    réalisateur, d'un acteur, etc.",
            "itemtype": "property",
            "name": "FIELD_PEOPLE",
            "type": "String",
            "static": 1,
            "final": 1,
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 67,
            "description": "LARGEUR d'un carreau de la grille snap\nNotes : Correspond à la largeur d'un livre fermé",
            "itemtype": "property",
            "name": "GRID_X",
            "type": "Number",
            "static": 1,
            "final": 1,
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 75,
            "description": "HAUTEUR d'un carreau de la grille snap\nNotes : Correspond à la hauteur d'un livre fermé",
            "itemtype": "property",
            "name": "GRID_Y",
            "type": "Number",
            "static": 1,
            "final": 1,
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 88,
            "description": "Substitut à la méthode `confirm` affreuse de Firefox\n\nNotes\n-----\n  * Si aucune méthode de renoncement n'est défini (3e paramètres) et que\n    l'utilisateur renonce, ça interrompt simplement le processus courant.",
            "itemtype": "method",
            "name": "confirm",
            "async": 1,
            "params": [
                {
                    "name": "message",
                    "description": "Le message de confirmation.",
                    "type": "String"
                },
                {
                    "name": "suivreOk",
                    "description": "La méthode qui sera appelée pour suivre si OK",
                    "type": "Function"
                },
                {
                    "name": "suivreCancel",
                    "description": "(if any) la méthode poursuivre si renoncement.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Optionnellement on peut définir d'autres valeurs :\n                                  cancel_name : Nom à donner au bouton Cancel\n                                  ok_name     : Nom à donner au bouton OK (confirmation)\n                                  id          : Identifiant à donner à la boite",
                    "type": "Object"
                }
            ],
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 119,
            "description": "Aligne les livres sur la grille\n\nNotes\n  * Pour le moment, la méthode n'est appelée que lorsque la case \"Livres rangés\"\n    est cochée (le moment où on le fait) dans les préférences.\n  * C'est la position vertical qui l'emporte. Ensuite, si deux livres sont à\n    la même hauteur, c'est la position vertical qui détermine la précédence.\n  * Cela classe aussi les livres dans Collection.books, pour qu'ils soient\n    sélectionnés dans le bon ordre par les flèches",
            "itemtype": "method",
            "name": "align_books",
            "params": [
                {
                    "name": "dir",
                    "description": "Orientation de l'alignement, h:horizontal, v:vertical",
                    "type": "String"
                }
            ],
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 156,
            "description": "Peuple le menu des collections permettant de les choisir\n\nNotes\n-----\n  * La méthode sélectionne aussi la collection courante, donc elle doit\n    être appelée après la définition de Collection.name\n  * Puisque la méthode ne vide pas le select, elle peut être appelée\n    pour ajouter une collection à la volée, si cette fonctionnalité existe\n    à l'avenir.",
            "itemtype": "method",
            "name": "peuple_menu_collections",
            "params": [
                {
                    "name": "collections",
                    "description": "Liste des noms de collections.",
                    "type": "Array"
                }
            ],
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 179,
            "description": "Retourne la position +pos+ sur la grille ou val est [x, y]",
            "itemtype": "method",
            "name": "position_on_grid",
            "params": [
                {
                    "name": "pos",
                    "description": "Couple [x, y]",
                    "type": "Array"
                },
                {
                    "name": "snaping",
                    "description": "Ne snap la position que si true",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "{left, top}",
                "type": "Object"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/ui/ui.js",
            "line": 231,
            "description": "Méthode appelée lorsque l'on glisse un outil sur la table (principalement\npour créer une nouvelle fiche).\n\nNotes\n-----\n  * Les deux utilisations principales sont :\n    * La création d'une nouvelle fiche (à l'aide d'un outil-fiche)\n    * La sortie d'une fiche d'un de ses parents.",
            "itemtype": "method",
            "name": "ondrop_on_table",
            "params": [
                {
                    "name": "evt",
                    "description": "Drop event",
                    "type": "Event"
                },
                {
                    "name": "ui",
                    "description": "Set jQuery transmis par droppable.",
                    "type": "Object"
                }
            ],
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 5,
            "description": "Sécurité pour empêcher de quitter la page quand des données n'ont pas été\nenregistrées.\n \nS'il n'y a aucune modification en cours, on sauve la configuration courante des\nfiche pour récupérer le même état au relancement de l'application. Noter cependant\nque si un “flash” d'une configuration a déjà été demandé, on ne procède pas\nà l'enregistrement de la configuration.",
            "itemtype": "method",
            "name": "confirmExit",
            "params": [
                {
                    "name": "Event",
                    "description": "beforeUnload généré.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "Rien si la collection n'a pas été modifiée ou le texte à afficher\n        pour confirmer de quitter la page. Mais à cause d'un bug de Firefox,\n        ce texte ne s'affiche pas."
            },
            "class": "App",
            "module": "app"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 47,
            "description": "Clipboard (mémoire tampon) de l'application. Pour placer du texte qui \ndevra ensuite être inséré dans le texte à l'aide de CMD+V.\nNotes\n-----\n  * La valeur est soit un {String} à copier tel quel dans le texte, soit\n    un {Object} qui doit obligatoirement répondre à la méthode `.to_balise`\n    qui doit retourner le texte à coller dans le texte.\n  * Utilisé par exemple pour les références\n  * C'est la pseudo-méthode `App.coller_clipboard` qui répond au CMD+V",
            "itemtype": "property",
            "name": "clipboard",
            "type": "{Object|String}",
            "default": "null",
            "class": "App",
            "module": "app"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 64,
            "description": "Mis à TRUE si un flash de la configuration courante a été demandé. Pour \nempêcher d'en enregistrer un nouveau à la fermeture de la collection.\nNoter cependant que de toute façon, il sera impossible d'enregistrer la \nconfiguration courante si un fichier de configuration (qui est supprimé à\nchaque chargement) se trouve déjà créé (par un flash).",
            "itemtype": "property",
            "name": "flashed",
            "type": "{Boolean}",
            "default": "false",
            "class": "App",
            "module": "app"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 77,
            "description": "Préférences de l'application\n\nPréférences\n-----------\n  * snap    Si true, les fiches sont disposées sur la grille\n\nNotes\n-----\n  * Cf. l'objet {Prefs} qui gère ces préférences",
            "itemtype": "property",
            "name": "preferences",
            "type": "{Object}",
            "static": 1,
            "default": "Les préférences par défaut",
            "class": "App",
            "module": "app"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 102,
            "description": "Enregistre la configuration d'ouverture (et de rangement) actuelle pour\nla replacer au prochain chargement de l'application.\n\nNOTES\n-----\n  * La méthode est appelée à chaque sauvegarde si les préférences l'exigent.\n  * Envoi la requête Ajax pour créer le fichier \"current_config.config\"\n  * Si une méthode doit suivre, renseigner avec cette méthode (proxy)\n    `App.save_current_configuration.poursuivre`",
            "itemtype": "method",
            "name": "save_current_configuration",
            "async": 1,
            "params": [
                {
                    "name": "forcer",
                    "description": "Si TRUE (quand appelé depuis l'appareil photo),\n                on force la destruction du fichier configuration pour prendre\n                cette nouvelle configuration.",
                    "type": "Boolean"
                },
                {
                    "name": "rajax",
                    "description": "Retourn de la requête ajax. Donc indéfini à l'appel\n                de la méthode.",
                    "type": "Object"
                }
            ],
            "class": "App",
            "module": "app"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 161,
            "description": "Insert dans le texte le contenu du clipboard s'il n'est pas null.\nS'il est null, renvoie FALSE pour que CMD+V agisse par défaut.\nNotes\n-----\n  * Le App.clipboard est vidé dès qu'il est collé pour ne pas parasiter le\n    comportement normal du coller-copier.\n  * C'est une propriété complexe, donc l'appeler sans parenthèses.\n  * Le `clipboard` peut être soit un simple {String} soit un {Object} répondant\n    à la méthode `.to_balise` (comme les références).",
            "itemtype": "method",
            "name": "coller_clipboard",
            "class": "App",
            "module": "app"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 189,
            "description": "Pour passer en mode test\n\nNotes\n-----\n  * C'est une propriété complexe, donc appeler sans parenthèses\n  * La méthode ouvre l'application Pure-JS-Tests.",
            "itemtype": "method",
            "name": "mode_test",
            "class": "App",
            "module": "app"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 205,
            "description": "Analyse la configuration actuelle (ouvertures et rangements) et retourne\nun {Object} à enregistrer dans le fichier de configuration courante.\n\nNOTES\n-----\n  * Pour procéder, cette propriété/méthode regarde simplement les fiches\n    qui sont on_table sur la table.",
            "itemtype": "property",
            "name": "current_config",
            "return": {
                "description": "Configuration courante, contenant `on_table', les fiches\n          actuellement on_table (sur la table) et `openeds', les fiches\n          actuellement ouvertes (opened = true)",
                "type": "Object"
            },
            "class": "App",
            "module": "app"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App.js",
            "line": 252,
            "description": "Applique la configuration courante. En d'autres termes, ouvre les fiches qui\ndoivent être ouvertes (en les sortant de leur parent si nécessaire).",
            "itemtype": "method",
            "name": "current_configuration",
            "class": "App",
            "module": "app"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 11,
            "description": "Indique si le panneau des préférences est prêt à être affiché (construit)",
            "itemtype": "property",
            "name": "prepared",
            "default": "false",
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 18,
            "description": "Données pour construire le panneau des préférences",
            "itemtype": "property",
            "name": "DATA",
            "type": "{Array}",
            "static": 1,
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 41,
            "description": "Méthode appelée quand on clique sur le cb \"livre rangés\"\nLa méthode affiche ou masque le menu pour choisir l'alignement des livres,\nhorizontal ou vertical.",
            "itemtype": "method",
            "name": "onchange_livre_ranged",
            "params": [
                {
                    "name": "coched",
                    "description": "Etat du coche de la cb",
                    "type": "Boolean"
                }
            ],
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 52,
            "description": "Enregistre les préférences de l'application (et reçoit le retour de la \nrequête ajax)\n\nNotes\n-----\n  * Les préférences sont définies dans {App.preferences}",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "rajax",
                    "description": "Retour de la requête Ajax (if any)",
                    "type": "Object"
                }
            ],
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 85,
            "description": "Ouvre le panneau des préférences\n\nNotes\n-----\n  * C'est la méthode principale à appeler. Elle se charge de construire le\n    panneau des préférences si nécessaire.",
            "itemtype": "method",
            "name": "show",
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 102,
            "description": "Ferme le panneau des préférences",
            "itemtype": "method",
            "name": "close",
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 117,
            "description": "Objet DOM du panneau ({jQuerySet})",
            "itemtype": "property",
            "name": "panneau",
            "type": "{jQuerySet}",
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 128,
            "description": "Récupère les valeurs des préférences dans le panneau et les met\ndans App.preferences",
            "itemtype": "method",
            "name": "get_values (complexe)",
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 168,
            "description": "Prépare le panneau des préférences\nNotes\n-----\n  * C'est une propriété complexe, donc l'appeler sans parenthèses",
            "itemtype": "method",
            "name": "prepare_panneau",
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 207,
            "description": "Retourne le code HTML du panneau de préférences\n\nNotes\n-----\n  * Cf. le fichier de style `./css/ui/preferences.css` pour l'aspect",
            "itemtype": "method",
            "name": "html_panneau (complexe)",
            "return": {
                "description": "Code à insérer dans le body.",
                "type": "HTML"
            },
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 226,
            "description": "Retourne le code HTML pour la liste des options des préférences",
            "itemtype": "method",
            "name": "liste_options",
            "return": {
                "description": "Code à insérer dans le panneau des préférences",
                "type": "HTML"
            },
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/App_Prefs.js",
            "line": 278,
            "description": "Retourne le code HTML pour les boutons du bas",
            "itemtype": "method",
            "name": "html_buttons",
            "return": {
                "description": "Code des boutons dans leur div",
                "type": "HTML"
            },
            "class": "App.Prefs",
            "module": "app",
            "submodule": "app-prefs"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 29,
            "description": "Nom de la collection courante (nom du dossier dans `./collection`)",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "static": 1,
            "default": "null",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 38,
            "description": "Fréquence de sauvegarde en mode de sauvegarde automatique.",
            "itemtype": "property",
            "name": "frequence_saving",
            "type": "Number",
            "static": 1,
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 49,
            "description": "Indique que la sauvegarde est en cours",
            "itemtype": "property",
            "name": "saving",
            "type": "Boolean",
            "default": "false",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 55,
            "description": "Indique que le chargement est en cours",
            "itemtype": "property",
            "name": "loading",
            "type": "Boolean",
            "default": "false",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 62,
            "description": "Indique que la collection est chargée",
            "itemtype": "property",
            "name": "loaded",
            "type": "Boolean",
            "default": "false",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 69,
            "description": "Liste des livres de la collection (liste d'instances {Book})\n\nNOTES\n-----\nCette liste est établie au chargement de la collection en insérant\ntoutes les fiches de type {Book}. C'est la méthode FICHES.dispatch qui\ns'en charge.",
            "itemtype": "property",
            "name": "books",
            "type": "Array",
            "default": "[]",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 83,
            "description": "Permet de choisir la collection à afficher.\n\nNotes\n-----\n  * Pour le moment, il y a trois collections possibles : la collection\n    \"narration\" (pour laquelle a été créée cette app), la collection \"test\"\n    qui permet de faire les tests unitaires et d'intégration et la collection\n    \"publishing\" qui permet de faire les tests de publication.\n  * La méthode produit une alerte si des éléments modifiés n'ont pas été\n    enregistrés.\n  * La méthode initialise tout avant de charger (Collection.clear).\n  * Si on n'est pas en mode test, un backup est lancé à la fin du chargement.",
            "itemtype": "method",
            "name": "choose",
            "async": 1,
            "params": [
                {
                    "name": "name",
                    "description": "Le nom de la collection à charger.",
                    "type": "String"
                },
                {
                    "name": "confirmed",
                    "description": "Lorsque des éléments étaient modifiés, la fonction\n                  a demandé confirmation. Le résultat de la confirmation, lorsqu'il\n                  est positif, est renvoyé par cet argument.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "True si le chargement de la collection a été lancé. False sinon.",
                "type": "Boolean"
            },
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 117,
            "description": "Retour du chargement de la collection\n-------------------------------------\n\nNotes\n-----\n  * Cette méthode produit :\n    * Dispatch des informations\n    * Construction de la collection\n    * Lancement d'un backup (sauf en mode test)\n    * Préparation de l'interface utilisateur",
            "itemtype": "method",
            "name": "retour_load",
            "params": [
                {
                    "name": "rajax",
                    "description": "Le retour ajax de la méthode load.",
                    "type": "Object"
                }
            ],
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 150,
            "description": "Retour du backup forcé\nNotes \n  * Au cours de ce backup j'ai essayé aussi de faire une sauvegarde en ligne\n    lorsque c'est la série narration, mais ça ne fonctionne pas encore.",
            "itemtype": "method",
            "name": "retour_force_backup",
            "params": [
                {
                    "name": "rajax",
                    "description": "Objet retourné par la requête Ajax",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ok",
                            "description": "True si tout s'est bien passé",
                            "type": "Boolean"
                        },
                        {
                            "name": "message",
                            "description": "Le message retourné (l'erreur en cas d'erreur)",
                            "type": "String"
                        },
                        {
                            "name": "backup_narration",
                            "description": "True si le backup sur icare a été tenté",
                            "type": "Boolean"
                        },
                        {
                            "name": "backup_narration_exit",
                            "description": "L'exit de la commande. Si 0 => OK",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 191,
            "description": "Méthode qui dispatche toutes les données +data+ remontées par\nla requête ajax `collection/load`.\n\nNotes\n-----\n  * Il s'agit de dispatcher :\n      * Les fiches (et d'afficher/ouvrir celles qui doivent l'être)\n      * Les données de l'application courante (comme le nom de la collection)\n      * Les préférences de l'application\n\nWARNING\n-------\nCette méthode ne doit pas être utilisée pour charger seulement une\nportion de la collection en cours de travail, car elle ré-initialise la\nliste des modifications en fin de dispatch (car la création des fiches\nles a marquées modifiées).\nEn d'autres termes, si des fiches sont chargées en groupe plus tard, il\nfaut passer par FICHES.dispatch (TODO: mais n'est-ce pas le même problème ?\net ne vaudrait-il pas mieux gérer la marque de la modification de la fiche ?)",
            "itemtype": "method",
            "name": "dispatch",
            "params": [
                {
                    "name": "data",
                    "description": "Toutes les données remontées par ajax.",
                    "type": "Object"
                }
            ],
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 239,
            "description": "Dispatch les données remontées au chargement (en dehors des données fiches)\n\nNotes\n-----\n  * Il s'agit des données :\n    * Le dernier identifiant de fiche utilisé.\n    * Le nom de la collection courante\n    * La configuration courante (ouverte/visibilité des fiches)\n    * Les préférences de l'application.\n    * Au premier chargement, définit aussi `collections`, la liste\n      des noms des collections courantes, pour établir le menu qui \n      permettra de passer de l'une à l'autre.",
            "itemtype": "method",
            "name": "dispatch_data",
            "params": [
                {
                    "name": "data",
                    "description": "La table des données à dispatcher",
                    "type": "Object"
                }
            ],
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 266,
            "description": "Demande confirmation avant de charger une nouvelle collection, quand des\néléments n'ont pas été sauvés (this.modified est true).\n\nNotes\n-----\n  * La méthode utilise `UI.confirm`.\n  * Elle est considérée comme asynchrone puisque la méthode UI.confirm l'est.",
            "itemtype": "method",
            "name": "confirm_load",
            "async": 1,
            "params": [
                {
                    "name": "poursuivre",
                    "description": "La méthode pour suivre.",
                    "type": "Function"
                }
            ],
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 293,
            "description": "Classe les livres dans `this.books` suivant leur disposition sur la\ntable. Cette méthode permet de rationnaliser l'utilisation des flèches\npour passer d'un livre à l'autre.\nNotes\n  * La méthode est appelée à chaque dispatch des fiches pour classer les\n    livre dans l'ordre de leur positionnement sur la table.\n    La méthode règle la propriété volatile `indice` du livre (0-start)\n  * La méthode est aussi utilisée quand on choisit les livres rangés dans\n    les préférences (et de façon générale chaque fois que les préférences sont\n    enregistrées quand il faut ranger les livres).\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "sort_book_from_table",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 318,
            "description": "Efface complètement la collection courante (avant chargement d'une autre\ncollection)",
            "itemtype": "method",
            "name": "clear (sans parenthèses)",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 331,
            "description": "Les deux méthodes `disable_save' et 'enable_save' permettent\nd'activer ou non la sauvegarde automatique (lorsque l'option AUTO\nest activé)\n\nNotes\n-----\n  * Ce sont des méthodes complexes, donc à invoquer sans parenthèses.  \n  * UTILISER CES DEUX MÉTHODES plutôt que stop_automatic_saving et\n    start_automatic_saving.\n  * L'idéal est même d'utiliser `stop_save` (exactement) et `restart_save`\n    qui arrête et relance la sauvegarde automatique seulement dans le cas\n    où elle est activée (cf. les handy methods)",
            "itemtype": "method",
            "name": "disable_save",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 355,
            "description": "Réactive la sauvegarde automatique\nNotes\n-----\n  * Lire les notes de la méthode `disable_save`",
            "itemtype": "method",
            "name": "enable_save",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 423,
            "description": "Chargement de la collection (normale ou test)\nNotes\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "load",
            "async": 1,
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 441,
            "description": "Retourne FALSE si quelque chose doit être sauvé (fiches, etc.)\n\nNotes\n-----\n  * La méthode est appelée par Collection.save()",
            "itemtype": "method",
            "name": "nothing_to_save (sans parenthèses)",
            "return": {
                "description": "FALSE si des choses sont à enregistrer, TRUE dans le cas contraire."
            },
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 464,
            "description": "Sauvegarde de tous les éléments de la collection\n(fiches, configuration, etc.)\n\nNOTES\n-----\n  * Les fiches à sauvegarder (ou supprimer) sont contenues dans la liste\n    this.modifieds_list (sous forme d'instances)\n  * C'est la méthode `nothing_to_save` qui est appelée en premier\n    lieu pour voir si un enregistrement est nécessaire.\n  * La méthode lance une \"chaine de sauvegarde\" appelant `save_fiches`,\n    `save_config`, etc. jusqu'à `save_end`",
            "itemtype": "method",
            "name": "save",
            "async": 1,
            "return": {
                "description": "TRUE si quelque chose est en train d'être sauvé. FALSE dans le\n        cas contraire."
            },
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 499,
            "description": "Demande de la sauvegarde de la configuration courante\nNotes\n-----\n  * Seulement si les préférences le réclament",
            "itemtype": "method",
            "name": "save_config",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 516,
            "description": "Fin de la sauvegarde générale",
            "itemtype": "method",
            "name": "end_save",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 528,
            "description": "Marque la collection modifiée/non modifié",
            "itemtype": "property",
            "name": "modified",
            "type": "Boolean",
            "default": "false",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 541,
            "description": "Lance le backup journalier\nNotes\n-----\n  * Cette procédure est lancée tout de suite après le chargement de la\n    collection courante (sauf en mode test).\n  * C'est une pseudo-méthode, donc à appeler sans parenthèses.",
            "itemtype": "method",
            "name": "backup",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 556,
            "description": "Retour du backup quotidien\nNotes\n-----\n  * Même si c'est un backup quotidien unique, il est appelé à chaque\n    chargement de l'application.\n  * En mode normal (non test), c'est cette méthode qui définit que \n    l'application est prête à travailler (`window.ready`)",
            "itemtype": "method",
            "name": "retour_backup",
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Collection.js",
            "line": 574,
            "description": "Force un nouveau backup (le fichier sera enregistré avec l'heure)\nNotes\n  * Sauf en mode test\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "force_backup",
            "async": 1,
            "class": "Collection",
            "module": "Collection"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/REFS.js",
            "line": 11,
            "description": "Liste {Object} des références instanciées. En clé l'identifiant de la\nréférence, composée de <type>-<id> de la fiche et en valeur l'instance {Ref}.",
            "itemtype": "property",
            "name": "list",
            "type": "{Object}",
            "default": "{}",
            "class": "REFS",
            "module": "REFS.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/REFS.js",
            "line": 21,
            "description": "Retourne l'instance Ref de la référence (la prend dans les références déjà\ninstanciées ou crée une nouvelle instance).",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "rid",
                    "description": "Identifiant de la référence telle qu'on peut la trouver\n                     dans une balise. P.e. \"chap-3\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Instance de la référence",
                "type": "Ref"
            },
            "class": "REFS",
            "module": "REFS.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 35,
            "description": "Type de la cible de la référence",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 41,
            "description": "Identifiant de la cible de la référence",
            "itemtype": "property",
            "name": "id",
            "type": "Number|String",
            "final": 1,
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 48,
            "description": "La fiche porteuse de la référence, c'est-à-dire qui la possède dans\nson texte. La plupart du temps, c'est un {Paragraph} de page.\nNotes\n-----\n  * Noter que cette propriété est dynamique elle change en fonction de\n    la référence à écrire.",
            "itemtype": "property",
            "name": "porteuse",
            "type": "Fiche",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 64,
            "description": "Formate la balise pour affichage\n\nNotes\n-----\n  * Le formatage de la balise dépend de :\n      * Si la cible est chargée ou non\n      * Si la cible appartient au même livre ou non\n      * Si le chargement de la cible peut se faire ou non",
            "itemtype": "method",
            "name": "formate",
            "params": [
                {
                    "name": "porteuse",
                    "description": "La fiche qui doit recevoir la référence formatée",
                    "type": "Fiche"
                },
                {
                    "name": "default_title",
                    "description": "Le titre par défaut contenu dans la balise.",
                    "type": "Array"
                },
                {
                    "name": "skip_loading",
                    "description": "\n                  Pour le moment, ce paramètre n'est pas pris en compte : on ne\n                  tente jamais de charger la fiche d'une référence inexistante\n                  pour éviter les problèmes (vu que le formatage est un flux sur)\n                  un ensemble de paragraphes.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "La balise formatée pour affichage.",
                "type": "String"
            },
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 94,
            "description": "Formatage du titre pour une cible chargée\nLa méthode définit les valeurs `titre_same_book` et `titre_hors_book` de\nla référence",
            "itemtype": "method",
            "name": "titres_for_loaded_cible",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 108,
            "description": "Définit les titres pour une cible non chargée (simple)\nNotes\n-----\n  * La cible n'étant pas chargée, on ne peut rien savoir d'elle, on met\n    donc le même texte simple dans les deux propriétés `titre_same_book`\n    et `titre_hors_book`.",
            "itemtype": "method",
            "name": "titres_for_non_loaded_cible",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 133,
            "description": "Retourne la balise [ref:...] à écrire dans le code du texte/titre",
            "itemtype": "property",
            "name": "to_balise",
            "type": "String",
            "final": 1,
            "example": [
                "\n  jq.append(ref.to_balise)\n  // Where `jq` is a DOMElement\n  // And `ref` is a Ref Instance"
            ],
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 152,
            "description": "Retourne la balise HTML pour la référence\nNotes\n-----\n  * C'est une propriété complexe, l'appeler sans parenthèses\n  * Le titre (le contenu) de la balise doit avoir été construit avant\n    d'appeler cette méthode",
            "itemtype": "method",
            "name": "balise_html",
            "return": {
                "description": "La balise à écrire dans le texte.",
                "type": "String"
            },
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 173,
            "description": "Appelée pour updater l'affichage de toutes les références lorsque la\nfiche-cible est chargée.\nNotes\n-----\n  * Propriété complexe => appeler sans parenthèses",
            "itemtype": "method",
            "name": "update",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 192,
            "description": "Instance Fiche de la cible de la référence\nNotes\n-----\n  * WARNING: Cette propriété est mise à NULL même si l'instance Fiche\n    existe, mais qu'elle n'est pas encore chargée.",
            "itemtype": "property",
            "name": "cible",
            "type": "Fiche",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 212,
            "description": "Titre pour la fiche-porteuse (pour la composition de son texte affiché)\nNotes\n-----\n  * Ce titre varie en fonction du fait que cible et porteuse se trouvent\n    ou non dans le même livre.",
            "itemtype": "property",
            "name": "titre_for_porteuse",
            "type": "String",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 228,
            "description": "Retourne le titre pour la cible\nNotes\n-----\n  * Ce titre dépend du type de la fiche. Pour un book, on prend son titre\n    réel (`real_titre`), pour un paragraphe, on prend ses 50 premiers signes,\n    et on prend le titre normal pour les chapitres et les pages.\n  * Cette propriété ne doit être utilisée que pour une fiche-cible chargée.",
            "itemtype": "property",
            "name": "titre_cible",
            "type": "String",
            "static": 1,
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 262,
            "description": "Marque pour le livre à ajouter dans le titre hors book (quand la cible et\nla fiche porteuse n'appartienne pas au même livre ou que l'une des deux fiches\nn'est pas dans un livre)",
            "itemtype": "property",
            "name": "mark_book",
            "type": "String",
            "final": 1,
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 280,
            "description": "Renvoie true si la cible de la référence appartient au même livre que la\nfiche porteuse (this.porteuse).\n\nNotes\n-----\n  * C'est une propriété complexe qui est recalculée à chaque nouvelle porteuse.\n  * @rappel: this.porteuse est une instanceof {Fiche}\n  * Si la cible de la référence courante n'est pas encore chargée, on ne peut\n    pas déterminer son livre. La propriété est alors mise à false.",
            "itemtype": "property",
            "name": "same_book",
            "type": "Boolean",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 308,
            "description": "Retourne la class pour la balise `ref` en tenant compte du fait que la\nréférence appartient ou non au même livre que la fiche porteuse contenant\nla référence.\nNotes\n-----\n  * C'est une propriété complexe car la valeur est redéfini à chaque nouvelle\n    insertion dans le texte demandée.",
            "itemtype": "property",
            "name": "class",
            "type": "String",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 323,
            "description": "Retourne la class pour la balise ref dans le cas d'une référence qui\nappartient au même livre que la porteuse.\nNotes\n-----\n  * C'est une propriété complexe qui redéfinit la valeur à chaque nouvelle\n    fiche porteuse (paragraphe)",
            "itemtype": "property",
            "name": "class_same_book",
            "type": "String",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 338,
            "description": "Retourne la class pour la balise ref dans le cas d'une référence qui\nN'appartient PAS au même livre que la porteuse.\nNotes\n-----\n  * C'est une propriété complexe qui redéfinit la valeur à chaque nouvelle\n    fiche porteuse (paragraphe)",
            "itemtype": "property",
            "name": "class_hors_book",
            "type": "String",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 353,
            "description": "Titre construit pour la référence, tel qu'il apparaitra dans le texte.\nIl dépend de l'état de chargement de la cible de la référence et de l'appartenance\nou non au même book que la porteuse.\nNotes\n-----\n  * C'est une propriété complexe car sa (re)-définition peut faire varier\n    toutes les balises références de la même référence.",
            "itemtype": "property",
            "name": "titre",
            "type": "String",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 374,
            "description": "Propriété similaire à la précédente, mais pour une référence n'appartenant\npas au livre de la porteuse.",
            "itemtype": "property",
            "name": "titre_hors_book",
            "type": "String",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 391,
            "description": "Type humain de la référence (par exemple \"livre\" pour le type 'book')\nNotes\n-----\n  * La valeur est sans capitale, pour pouvoir s'insérer dans le flux du texte\n    ou entre parenthèses.",
            "itemtype": "property",
            "name": "human_type",
            "type": "String",
            "final": 1,
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 407,
            "description": "Retourne l'instance {Fiche} de la référence courante\n\nNotes\n-----\n  * Pour obtenir cette information, il faut obligatoirement que\n    la cible de la référence soit chargée.",
            "itemtype": "property",
            "name": "book",
            "type": "Fiche",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/Ref.js",
            "line": 425,
            "description": "Retourne l'identifiant du livre de la référence\n\nNotes\n-----\n  * Pour obtenir cette information, il faut obligatoirement que\n    la cible de la référence soit chargée. Donc à n'utiliser que dans les\n    méthodes/propriétés qui traitent du cas où la cible est loaded.",
            "itemtype": "property",
            "name": "book_id",
            "type": "{String|Number}",
            "class": "Ref",
            "module": "ref.js"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/col_text.js",
            "line": 18,
            "description": "Le code en traitement courant",
            "itemtype": "property",
            "name": "code",
            "type": "{String}",
            "default": "null",
            "class": "ColText",
            "module": "ColText"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/col_text.js",
            "line": 28,
            "description": "Met en forme le texte +code+ pour son affichage humain\n\nNotes\n-----\n  * La méthode peut devenir asynchrone lorsqu'il s'agit du texte\n    d'un paragraphe dont le ptype nécessite l'interprétation d'un code\n    dans un langage autre que javascript ou que c'est un fichier à\n    charger.",
            "itemtype": "method",
            "name": "formate",
            "params": [
                {
                    "name": "code",
                    "description": "Le texte à formater",
                    "type": "String"
                },
                {
                    "name": "cible",
                    "description": "Pour les références, ainsi que pour les corrections\n                          suivant le ptype du paragraphe, on a besoin de la cible",
                    "type": "Fiche"
                }
            ],
            "return": {
                "description": "Le code mis en forme, prêt à être affiché dans un DIV/SPAN\n                  ou un aperçu.",
                "type": "String"
            },
            "example": [
                "\n    ColText.formate(<le texte>)\n    # Mais on peut utiliser aussi :\n    <le texte>.formate\n"
            ],
            "class": "ColText",
            "module": "ColText"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/col_text.js",
            "line": 116,
            "description": "Traitement du code d'un paragraphe dont le ptype n'est pas 'text'\nNotes\n  * La méthode est asynchrone seulement pour les ptype(s) 'file' et 'fico'",
            "itemtype": "method",
            "name": "traite_code_by_ptype",
            "async": 1,
            "params": [
                {
                    "name": "ipara",
                    "description": "L'instance du paragraphe",
                    "type": "Paragraph"
                }
            ],
            "class": "ColText",
            "module": "ColText"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "line": 15,
            "description": "Indicateur du mode test.\n\nNotes\n-----\n  * En réalité, c'est une pseudo constante puisqu'elle est défini au chargement\n    de la collection, si la collection courante (Collection.name) est \"test\"",
            "itemtype": "property",
            "name": "MODE_TEST",
            "static": 1,
            "class": "window",
            "module": "window"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "line": 29,
            "description": "Indique que l'application est prête (collection chargée et interface prêt)",
            "itemtype": "property",
            "name": "ready",
            "type": "Boolean",
            "default": "false",
            "class": "window",
            "module": "window"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "line": 52,
            "description": "Interrompt la sauvegarde provisoirement si elle est en automatique\n\nNotes\n-----\n  * La relancer avec `restart_save`",
            "itemtype": "method",
            "name": "stop_save",
            "class": "window",
            "module": "window"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "line": 69,
            "description": "Relance la sauvegarde automatique interrompue par `stop_save`\n\nNotes\n-----\n  * Seulement si la sauvegarde automatique étant en cours",
            "itemtype": "method",
            "name": "restart_save",
            "class": "window",
            "module": "window"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "line": 88,
            "description": "Retourne l'instance {Mot} du mot d'identifiant +mid+\nen la créant si nécessaire\n\nNOTES\n-----\n  * C'est un raccourci de la méthode DICO.get",
            "itemtype": "method",
            "name": "get_mot",
            "params": [
                {
                    "name": "mid",
                    "description": "Identifiant du mot",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Instance du mot voulu, ou null si mot introuvable",
                "type": "Mot"
            },
            "class": "window",
            "module": "window"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "line": 104,
            "description": "Retourne l'instance {Film} du film d'identifiant +fid+\nen la créant si nécessaire.\n\nNOTES\n-----\n  * Cette méthode est un raccourci de `FILMS.get(id)'",
            "itemtype": "method",
            "name": "get_film",
            "params": [
                {
                    "name": "fid",
                    "description": "Identifiant du film",
                    "type": "String"
                }
            ],
            "return": {
                "description": "L'instance du film ou null s'il n'existe pas.",
                "type": "Film"
            },
            "class": "window",
            "module": "window"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "line": 122,
            "description": "Retourne l'instance {Ref} de la référence d'identifiant +rid+\nen la créant si nécessaire.\n\nNOTES\n-----\n  * Cette méthode est un raccourci de `REFS.get(rid)'",
            "itemtype": "method",
            "name": "get_ref",
            "params": [
                {
                    "name": "rid",
                    "description": "Identifiant de la référence.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "L'instance Ref de la référence.",
                "type": "Ref"
            },
            "class": "window",
            "module": "window"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/handy_methods.js",
            "line": 148,
            "description": "Retourne le code HTML pour afficher l'image de path +path+\n\nNotes\n-----\n  * Pour le moment, l'image doit se trouver dans le dossier lib/img",
            "itemtype": "method",
            "name": "image",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "attrs",
                    "description": "Attributs à ajouter à la balise",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "Code HTML de la balise image à insérer.",
                "type": "String"
            },
            "example": [
                "\n    imgHtml = image('clavier/K_Tab.png', {id:\"touche_tab\", class:'rleft'})\n    # Produira le code :\n    <img src=\"../lib/img/clavier/K_Tab.png\" id=\"touche_tab\" class=\"rleft\" />\n"
            ],
            "class": "window",
            "module": "window"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/keyboard_events.js",
            "line": 6,
            "description": "Méthode de débuggage pour afficher les données simples de l'évènement",
            "itemtype": "method",
            "name": "dispay_code_event",
            "params": [
                {
                    "name": "Evènement",
                    "description": "déclenché",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "TRUE"
            },
            "class": "window",
            "module": "KeyboardEvents"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/keyboard_events.js",
            "line": 18,
            "description": "Gestion des touches pressées quand aucune fiche n'est sélectionnée\n\nNotes\n-----\n  * C'est la méthode par défaut",
            "itemtype": "method",
            "name": "keypress_when_no_selection_no_edition",
            "params": [
                {
                    "name": "Evènement",
                    "description": "touche-pressée déclenché.",
                    "type": "KeypressEvent"
                }
            ],
            "return": {
                "description": "FALSE si l'évènement doit être stoppé, TRUE dans le cas contraire.",
                "type": "Boolean"
            },
            "class": "window",
            "module": "KeyboardEvents"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/keyboard_events.js",
            "line": 66,
            "description": "Gestion des touches pressées quand une fiche est sélectionnée,\nmais que l'on ne se trouve pas dans un champ d'édition.",
            "itemtype": "method",
            "name": "keypress_when_fiche_selected_out_textfield",
            "params": [
                {
                    "name": "evt",
                    "description": "Évènement touche-pressée déclenchée",
                    "type": "KeypressEvent"
                }
            ],
            "return": {
                "description": "True si l'évènement doit se poursuivre, False dans le cas contraire.",
                "type": "Boolean"
            },
            "class": "window",
            "module": "KeyboardEvents"
        },
        {
            "file": "/Users/philippeperret/Sites/table_narration/js/keyboard_events.js",
            "line": 167,
            "description": "Méthode de gestion des évènements Keypress lorsqu'ils n'ont pas été traités\npar une méthode propre. C'est en quelque sorte les traitements par défaut.\nPar exemple, quel que soit le contexte, le raccourci CMD+S sauvera toujours la\ncollection.",
            "itemtype": "method",
            "name": "keypress_default",
            "params": [
                {
                    "name": "evt",
                    "description": "Evènement Keypress déclenché",
                    "type": "KeypressEvent"
                }
            ],
            "return": {
                "description": "False si l'évènement a été traité (a déclenché une action),\n                  True dans le cas contraire.",
                "type": "Boolean"
            },
            "class": "window",
            "module": "KeyboardEvents"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: statif",
            "line": " /Users/philippeperret/Sites/table_narration/js/livre/FICHES.js:37"
        },
        {
            "message": "unknown tag: usage",
            "line": " /Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js:674"
        },
        {
            "message": "Missing item type\nPrépare le panneau principal contenant le formulaire et le résultat\nde la recherche",
            "line": " /Users/philippeperret/Sites/table_narration/js/Search/>Search.js:254"
        },
        {
            "message": "Missing item type\nTODO\n  * Chercher seulement dans les fiches chargées (option très spéciale)\n  * types de fiches\n  * ptype des paragraphes\n  * Même les fiches \"not printed\"",
            "line": " /Users/philippeperret/Sites/table_narration/js/Search/>Search.js:325"
        },
        {
            "message": "Missing item type\nSélection la fiche précédente (sibling)\n\nNotes\n-----\n  * Le traitement est spécial pour les livres, ils sont conservés\n    dans l'ordre de leur placement sur la table",
            "line": " /Users/philippeperret/Sites/table_narration/js/required/Fiche_DOM.js:491"
        },
        {
            "message": "Missing item type\nPour un ptype ≠ 'text', MAJ+Return permet de passer à la ligne",
            "line": " /Users/philippeperret/Sites/table_narration/js/ui/>ui_input.js:195"
        }
    ]
}