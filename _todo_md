IMPLÉMENTER
-----------
cf. aussi l'issue list sur Github.

- Corriger absolument deux derniers bugs
- Puis faire les premiers essais de références croisées entre livres
  > s'arranger pour produire une erreur avec un livre non encore publié
  > s'arranger pour produire une erreur avec un livre publié mais ne
    contenant pas encore la référence (NON ce n'est pas possible :-)

- Poursuivre le travail sur le clipboard
  > À prendre en compte : j'ai détruit this.target à la fin du blur dans
  UI.Input, pour pouvoir savoir de façon sûre si on se trouvait dans un champ
  d'édition. Mais cela risque d'avoir de nombreux effets colatéraux à surveiller.
  Notamment, il faut voir ce qui se passe quand on veut coller un film ou un mot
  et qu'on blure fatalement le champ.
  > D'autre part cet essai foire (charger scenariopole)
    * Ouvrir le premier livre
    * Copier la première page (CMD + C)
    * Ouvrir la deuxième page
    * mettre le deuxième paragraphe en édition
    * Coller (CMD + V)
    Normalement, c'est la référence à la fiche qui devrait être collée, mais au lieu
    de ça, c'est un code qui vient de je ne sais pas où. Voir ce qui se passe.

EVENEMENCIER
  Principe des nouveaux évènemenciers :
  * Une banque d'évènements
    Peut-être une banque par "scale" du film
    Scale acte, scale meta-sequence, scale sequence scale scène, scale beat,
    scale event
    Dans chaque banque, les évènements possèdent
    - un identifiant unique (au moins dans la banque)
    - un résumé décrivant l'évènement
    - un temps (leur début)
    - une durée (leur fin)
    - une note (pour ajouter une note générale sur l'évènement)
    - des données propres (peut-être la nature de l'évènement)
  * Chaque évènemencier s'appuie sur ces banques.
    > Un évènemencier complet d'un scale donné reprend simplement tous les
      évènements de ce scale
    > Un brin peut piocher dans la banque, et intercroiser même des évènements
      de scale différent.
    * Donc un évènement doit préciser :
      // Les deux données qui suffisent à connaître l'évènement (son temps, sa durée,
      // son résumé)
      - scale::id

PUBLISH
- asset.tex :: définir les autres types de document avec des styles propres qu'il
  faut ajouter aux styles de paragraphe de collection.
  > Évènemencier (spécial puisqu'un évènement pourrait fonctionner avec une
    commande qui reçoit les informations de l'évènement)

- Renommer l'application 'table_narration' par 'collection' (pour pouvoir en
  faire plein d'autres choses). Peut-être faire simplement un autre dépôt et
  supprimer 'table_narration' (EN PRENANT SOIN DE COPIER LE DOSSIER 'collection'
  QUI N'EST PAS UPLOADÉ SUR GITHUB)

  
INSERTION FICHIER
  > Traitement des fichiers de type évènemenciers
  
- ALIAS : Une page peut être un alias d'une autre page
  > Elle ne peut pas être éditée
  > Un bouton doit permettre de pouvoir éditer l'original
  > L'originale doit être chargée pour pouvoir afficher le texte de l'alias
  

PUBLISHING : FILMOGRAPHIE / BIBLIOGRAPHIE / SCÉNODICO
  Fabriquer mes propres procédure de récupération des films et livres pour LaTex
  - Les considérer comme des chapitres Filmographie, Bibliographie, Scénodico
  - Faire la classe Livre qui fonctionnera comme les Films
  Procédure :
    - Passer en revue toutes les références pour renseigner FILMS, MOTS et LIVRES,
      avec un `index` par élément. Noter qu'on peut très bien construire content.tex
      en même temps puisque l'index sera toujours créé en même temps. SAUF si on veut
      que le classement soit alphabétique.
    - Lors de la construction des balises, utiliser l'index enregistré et le placer
      derrière la référence, en gardant le style de LaTex pour les références.
    - Essayer de placer un label derrière la référence pour pouvoir obtenir la page
      de la référence (si pas possible, garder les mots en indexation normale)
    - Construire enfin les chapitres fictifs Filmographie et Bibliographie.
  

